// -----------------------------------------------------------------------------
// This file contains all application-wide Sass variables.
// -----------------------------------------------------------------------------





/// Regular font family
@mixin textMix($stack, $size, $weight) {
	@if $stack == 'Roboto' {
		font-family: "Roboto", Helvetica, Arial, sans-serif;
	} @else if $stack == 'PT Serif' {
		font-family: "PT Serif", Georgia, serif;
	}

	font-size: $size;
	font-weight: $weight;
}

/// Copy text color
/// @type Color
$text-color: #222 !default;

/// Main brand color
/// @type Color
$brand-color: #E50050 !default;

/// Light grey
/// @type Color
$light-grey: #EDEDED !default;

/// Medium grey
/// @type Color
$mid-grey: #999 !default;

/// Dark grey
/// @type Color
$dark-grey: #444 !default;





/// Container's maximum width
/// Below that is 100%
/// @type Length
$max-width: 1200px !default;


/// Breakpoints map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are actual breakpoints expressed in pixels
/// @see {mixin} respond-to
$breakpoints: (
  'x-small': (max-width: 320px),
  'small': (max-width: 480px),
  'medium': (max-width: 800px),
) !default;


/// Relative or absolute URL where all assets are served from
/// @type String
/// @example scss - When using a CDN
///   $base-url: 'http://cdn.example.com/assets/';
$base-url: '/assets/' !default;

// Main Menu Hamburger Sizing Helper
// (lol)
@mixin hamburger-helper($breakpoint) {

  @if $breakpoint == 'x-small' {

  }
  @else if $breakpoint == 'small' {
    height: 40px;
    width: 40px;
    float: left;
  }
  @else {
    height: 60px;
    width: 60px;
  }
}
$main-menu-width: 330px;
$main-menu-toggler-width: 60px;
$main-menu-hamburger-height: 2px;