@model Informa.Web.ViewModels.IListableViewModel

@if (Model.DisplayImage && !string.IsNullOrEmpty(Model.ListableImage))
{
    <img class="article-preview__image" src="@Model.ListableImage">
}

<div class="article-metadata">
     <div class="article-preview__bookmarker pop-out__trigger @(Model.IsUserAuthenticated ? "js-bookmark-article" : "js-pop-out-trigger" )"
         data-pop-out-type="sign-in"
         data-bookmark-id="Model.Article._Id"
         @( Model.IsArticleBookmarked ? "data-is-bookmarked=true" : null)>

        @* Storing "bookmark" / "bookmarked" labels in data attributes so Javascript
        can use text provided by Sitecore when toggling state post-load. *@
        <span   class="article-prologue__share-label js-bookmark-label"
                data-label-bookmark="Model.BookmarkText"
                data-label-bookmarked="Model.BookmarkedText">
            @( Model.IsArticleBookmarked ? Model.BookmarkedText : Model.BookmarkText )
        </span>

        @* SAM, THIS NEEDS SOME BACKEND WORK, THE VIEW MODEL DOESN'T HAVE THE PROPERTY *@

        <svg class="article-bookmark article-bookmark__bookmarked click-utag @( Model.IsArticleBookmarked ? "is-visible" : null)" data-info='{"event_name" : "bookmark"}'>
            <use xlink:href="/dist/img/svg-sprite.svg#bookmarked"></use>
        </svg>

        <svg class="article-bookmark click-utag @( Model.IsArticleBookmarked ? null : "is-visible")" data-info='{"event_name" : "bookmark"}'>
            <use xlink:href="/dist/img/svg-sprite.svg#bookmark"></use>
        </svg>

    </div> 
    <ul>
        <li>
            <time class="article-metadata__date">@Model.ListableDate.ToString("dd MMM yyyy")</time>
        </li>
        @if (!string.IsNullOrEmpty(Model.LinkableText))
        {
            <li>
                <h6>@string.Join(", ", Model.LinkableText)</h6>
            </li>
        }
        @if (!string.IsNullOrEmpty(Model.ListableType))
        {
            <li>
                <svg class="article-metadata__media-type">
                    <use xlink:href="/dist/img/svg-sprite.svg#@Model.ListableType"></use>
                </svg>
            </li>
        }
    </ul>
</div>

<div class="article-preview__inner-wrapper">
    <h1 class="article-preview__headline">
        <a
			href="@Model.LinkableUrl"
			class="click-utag"
			data-info='{ "event_name": "article_click_through", "click_through_destination": "@Model.ListableTitle" }'>
			@Model.ListableTitle
		</a>
    </h1>

    <span class="article-preview__byline">
        @Html.Raw(Model.ListableAuthorByLine)
    </span>

    <div class="article-summary">
        @Html.Raw(Model.ListableSummary)
    </div>
</div>

<div class="article-preview__tags bar-separated-link-list">
    @foreach (var tag in Model.ListableTopics.Take(2))
    {
        if (tag.LinkableUrl != null)
        {
            <a href="@tag.LinkableUrl">@tag.LinkableText</a>
        }
    }
</div>
