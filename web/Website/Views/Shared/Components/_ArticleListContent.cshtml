@using Informa.Library.Utilities.References
@model FeaturedArticleViewModel

@if (Model.DisplayImage)
{
    <img class="topic-featured-article__image" src="@Model.Image.ImageUrl">
}

@if(Model != null && Model.GlassModel != null) {
<div class="article-metadata">
     <div class="article-preview__bookmarker pop-out__trigger @( Model.IsUserAuthenticated ? "js-bookmark-article" : "js-pop-out-trigger" )"
         data-pop-out-type="sign-in"
         data-pop-out-align="right"
         data-bookmark-id="@Model.GlassModel._Id"
         @( Model.IsArticleBookmarked ? "data-is-bookmarked=true" : null)>

        <span   class="article-prologue__share-label js-bookmark-label"
                data-label-bookmark="@Model.BookmarkText"
                data-label-bookmarked="@Model.BookmarkedText">
            @( Model.IsArticleBookmarked ? Model.BookmarkedText : Model.BookmarkText )
        </span>

    <svg class="article-bookmark article-bookmark__bookmarked click-utag @( Model.IsArticleBookmarked ? "is-visible" : null)" data-info='{"event_name" : "bookmark"}'>
        <use xlink:href="/dist/img/svg-sprite.svg#bookmarked"></use>
    </svg>

    <svg class="article-bookmark click-utag @( Model.IsArticleBookmarked ? null : "is-visible")" data-info='{"event_name" : "bookmark"}'>
        <use xlink:href="/dist/img/svg-sprite.svg#bookmark"></use>
    </svg>

    </div>
    <ul>
        <li>
            <time class="article-metadata__date">@Model.Date.ToString("dd MMM yyyy")</time>
        </li>
        @if (!string.IsNullOrEmpty(Model.ContentType))
        {
            <li>
                <h6>@Html.Raw(Model.ContentType)</h6>
            </li>
        }
        @if (!string.IsNullOrEmpty(Model.MediaType))
        {
            <li>
                @Html.Sitecore().Rendering(RenderingReferences.Instance.MediaTypeIcon.ToString(), new { DataSource = Model.ID })
            </li>
        }
    </ul>
</div>

<div class="topic-featured-article__inner-wrapper">
    <h3 class="topic-featured-article__headline">
        <a
			href="@Model.Url"
			class="click-utag"
			data-info='{ "event_name": "article_click_through", "click_through_destination": "@Model.Title" }'>
			@Html.Raw(Model.Title)
		</a>
    </h3>

    <span class="article-preview__byline">
        @Html.Raw(Model.ArticleByLine)
    </span>

    <div class="article-summary">
        @Html.Raw(Model.Summary)
    </div>
</div>

<div class="article-preview__tags bar-separated-link-list">
    @foreach (var tag in Model.ListableTopics)
    {
        if (tag.LinkableUrl != null)
        {
            <a href="@tag.LinkableUrl">@tag.LinkableText</a>
        }
    }
</div>
}
