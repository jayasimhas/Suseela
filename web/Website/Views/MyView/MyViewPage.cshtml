@model Informa.Web.ViewModels.MyView.MyViewPageViewModel

@if (Model.IsAuthenticated && Model.IsFollowingAnyItem)
{
    <script type="text/javascript">
        var loadPreferanceId = @Html.Raw(Model.JSONData);
    </script>
    <div class="personalisationhome gridView">
        <div class="tableau-landing clearfix">
            <div class="personalHead clearfix">
                <h1>@Model.PageHeading</h1>
                <a class="editView button--filled button--outline hidden-xs" href="@Model.MyViewSettingsPageUrl">@Model.EditMyViewButtonLableText</a>
                <ul class="view-mode hidden-xs">
                    <li data-view="tileView" class="selected">
                        <a href="#" class="icon-tile-view click-utag" title="Tile View"
                           data-info='{"page_name": "@Model.PageName", "page_structure_view": "Grid View", "ga_eventCategory": "@Model.PageName", "ga_eventAction":"Page View Structure", "ga_eventLabel": "Grid View"}'>tile View</a>
                    </li>
                    <li data-view="listView" class="">
                        <a href="#" class="icon-list-view click-utag" title="List view" 
                           data-info='{"page_name": "@Model.PageName", "page_structure_view": "List View", "ga_eventCategory": "@Model.PageName", "ga_eventAction":"Page View Structure", "ga_eventLabel": "List View"}'>List View</a>
                    </li>
                </ul>
            </div>
            <div class="sub-heading-text">
                @Html.Raw(@Model.PageDescription)
            </div>
        </div>
        @*<div class="spinnerIcon hidespin">
            <img src="/dist/img/spinner.gif" width="40" />
        </div>*@
        <div class="personalisationPan"></div>
    </div>
    <input type="hidden" name="hdnMyViewPage" id="hdnMyViewPage" value="true" />
}
else if (Model.IsAuthenticated && !Model.IsFollowingAnyItem)
{
    Response.Redirect(Model.MyViewSettingsPageUrl);
}
else
{
    <div class="page-account__sign-in-solo">
        @{ Html.RenderPartial("../Article/UserCallToAction", Model.CallToActionViewModel); }
    </div>
            }