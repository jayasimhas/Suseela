@model Informa.Web.ViewModels.Articles.ArticleRecommendationViewModel

<div class="contentRecommendations">
@*Editor Picks*@
    <div class="article-related-content">
        <h2>@Model.EditorPicksText</h2>  
        
         @foreach (var article in Model.EditorsPicks)
         {
             string img = article.Featured_Image_16_9 != null ? article.Featured_Image_16_9.Src : "";
                <div class="contentRecomm-article">
                    <img class="article-related-content__img" src="@img" />
                    <span class="article-related-content__category">@Model.PublicationName</span>
                    <h5><a class="click-utag" href="@article._Url">@article.Title</a></h5>
                    <time class="article-related-content__date">@article.Actual_Publish_Date.ToString("d MMM yyyy")</time>
                </div>
          }
               

        @*What to read next*@
        
           <input type="hidden" id="hdnTaxonomyIds" value="@Html.Raw(Model.TaxonomyItems)" />
            <div class="ContentRecomm-ReadNext">
                <h2>@Model.WhatToReadNextText</h2>
            </div>


            @*Suggested For you*@
            @if (Model.IsAuthenticated && Model.IsGlobalToggleEnabled)
            {
                if (Model.IsFollowingAnyItem)
                {
                    <input type="hidden" id="hdnPreferanceIds" value="@Html.Raw(Model.PreferedTaxonomies)" />
                }
                else if (!string.IsNullOrWhiteSpace(Model.EntitlementIDs))
                {
                    <input type="hidden" id="hdnPreferanceIds" value="@Html.Raw(Model.EntitlementIDs)" />
                }
                <div class="suggested-article">
                    <h2>@Model.SuggestedForYouText</h2>
                 </div>

                    }
               </div>
    </div>
<script src="/dist/js/jquery-3.1.1.js"></script>
<script type="text/javascript">
    (function () {
        var RecomendedContent = {
            AjaxData: function (url, type, data, SuccessCallback) {
                console.log(JSON.stringify(data));
                $.ajax({
                    url: url,
                    data: JSON.stringify(data),
                    dataType: 'json',
                    contentType: "application/json",
                    type: type,
                    cache: false,
                    success: function (data) {
                        //if (data.articles && typeof data.articles === "object" && data.articles.length >= 3) {
                        SuccessCallback(data);
                        //} 
                    }
                });
            },
            RecomendedTemplate: function (data) {
                var Template = '';
                if (data.articles.length > 0) {
                    for (var i = 0; i < 3; i++) {
                        Template += '<div class="section-article">' +
										'<img class="article-related-content__img" src="' + data.articles[i].listableImage + '">' +
										'<span class="article-related-content__category"> ' + data.articles[i].listablePublication + ' </span>' +
										'<h5><a class="click-utag" href="' + data.articles[i].linkableUrl + '">' + data.articles[i].listableTitle + '</a></h5>' +
										'<time class="article-related-content__date">' + data.articles[i].listableDate + '</time>' +
									'</div>';
                    }
                }

                Template += '</div>';

                $('.ContentRecomm-ReadNext').append(Template);

            },
            SuggestedTemplate: function (data) {
                var Template = '';
                if (data.articles.length > 0) {
                    for (var i = 0; i < 3; i++) {
                        Template += '<div class="contentRecomm-article">' +
										'<img class="article-related-content__img" src="' + data.articles[i].listableImage + '">' +
										'<span class="article-related-content__category"> ' + data.articles[i].listablePublication + ' </span>' +
										'<h5><a class="click-utag" href="' + data.articles[i].linkableUrl + '">' + data.articles[i].listableTitle + '</a></h5>' +
										'<time class="article-related-content__date">' + data.articles[i].listableDate + '</time>' +
									'</div>';
                    }
                }

                Template += '</div>';

                $('.suggested-article').append(Template);
            },
            init: function () {
                var self = this;
                if ($('.ContentRecomm-ReadNext').length > 0) {
                    self.AjaxData('/api/articlesearch', 'POST', { 'TaxonomyIds': $('#hdnTaxonomyIds').val().split(","), 'PageNo': 1, 'PageSize': 4 }, self.RecomendedTemplate);
                }
                if ($('#hdnPreferanceIds').val()) {
                    self.AjaxData('/api/articlesearch', 'POST', { 'TaxonomyIds': $('#hdnPreferanceIds').val().split(","), 'PageNo': 1, 'PageSize': 4 }, self.SuggestedTemplate);
                }
            }
        }

        RecomendedContent.init();
    })();

</script>
