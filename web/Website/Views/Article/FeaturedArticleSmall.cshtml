@using Informa.Library.Utilities.References
@model FeaturedArticleViewModel
<section class="article-preview article-preview--small">
    @if (Model != null && Model.GlassModel != null)
    {
        if (Model.DisplayImage)
        {
            <img class="article-preview__image" src="@Model.Image.ImageUrl">
        }
        <div class="article-metadata">
            <div
				class="action-flag article-preview__bookmarker pop-out__trigger @( Model.IsUserAuthenticated ? "js-bookmark-article" : "js-pop-out-trigger" )"
                data-pop-out-type="sign-in"
                data-pop-out-align="right"
                data-bookmark-id="@Model.GlassModel._Id"
                data-salesforce-id="@Model.SalesforceId"
                @( Model.IsArticleBookmarked ? "data-is-bookmarked=true" : null)
				
								data-analytics='{
									"bookmark": "true",
									"bookmark_title": "@Model.Title",
									"bookmark_publication": "@Model.BookmarkPublication"
								}'>

				<span	class="action-flag__label js-bookmark-label"
						data-label-bookmark="@Model.BookmarkText"
						data-label-bookmarked="@Model.BookmarkedText">
					@( Model.IsArticleBookmarked ? Model.BookmarkedText : Model.BookmarkText )
				</span>

				<svg class="action-flag__icon action-flag__icon--bookmark article-bookmark article-bookmark__bookmarked @( Model.IsArticleBookmarked ? "is-visible" : null)">
			        <use xlink:href="/dist/img/svg-sprite.svg#bookmarked"></use>
			    </svg>

				<svg class="action-flag__icon action-flag__icon--bookmark article-bookmark @( Model.IsArticleBookmarked ? null : "is-visible")">
			        <use xlink:href="/dist/img/svg-sprite.svg#bookmark"></use>
			    </svg>

            </div>
            <ul>
                <li>
                    <time class="article-metadata__date">@Model.Date.ToString("dd MMM yyyy")</time>
                </li>
                @if (!string.IsNullOrEmpty(Model.ContentType))
                {
                    <li>
                        <h6>@string.Join(", ", Model.ContentType)</h6>
                    </li>
                }
                @if (!string.IsNullOrEmpty(Model.MediaType))
                {
                    <li>
                        @Html.Sitecore().Rendering(RenderingReferences.Instance.MediaTypeIcon.ToString(), new { DataSource = Model.ID })
                    </li>
                }
            </ul>
        </div>

        <div class="article-preview__inner-wrapper">
            <h1 class="article-preview__headline">
                <a
					href="@Model.GlassModel._Url"
					class="click-utag"
					data-info='{ "event_name": "article_click_through", "click_through_source": "@Model.PageTitle", "click_through_destination": "@Model.Title" }'>
					@Html.Raw(Model.Title)
				</a>
            </h1>

            <span class="article-preview__byline">
                @Html.Raw(Model.ArticleByLine)
            </span>

            <div class="article-summary">
                @Html.Raw(Model.Summary)
            </div>
        </div>

        <div class="article-preview__tags bar-separated-link-list">
            @foreach (var tag in Model.ListableTopics)
            {
                if (tag.LinkableUrl != null)
                {
                    <a href="@tag.LinkableUrl">@tag.LinkableText</a>
                }
            }
        </div>
    }
</section>
