@model Informa.Web.Areas.Account.ViewModels.Personalization.MyViewSettingsViewModel
@using System.Diagnostics;
@{
    Stopwatch sw = Stopwatch.StartNew();
}
@*For registration flow*@
@if (Model.IsFromRegistration && Model.IsAuthenticated)
{
    <div class="main__content myview-settings myview-settings-registration">
        <div class="tableau-landing clearfix">
            <div class="mysettingsHead clearfix">
                <h1>@Model.Title</h1>
                <div class="saveoption mtop-10 hidden-xs">
                    @if (Model.EnableSavePreferencesCheck)
                    {
                        <a class="registrationBtn button--filled button--outline validationChk" name="@Model.MyViewPageUrl" href="/">@Model.CompleteYourRegistrationText</a>
                    }
                    else
                    {
                        <a class="registrationBtn button--filled button--outline validationChk" name="@Model.MyViewPageUrl" href="/">@Model.CompleteYourRegistrationText</a>
                    }
                </div>
            </div>

            <div class="sub-heading-text">
                @Html.Raw(Model.SectionDescription)
            </div>
            <div class="alert-error register-not-selected js-form-error js-form-error-Required">
                <svg class="alert__icon">
                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/dist/img/svg-sprite.svg#alert"></use>
                </svg>
                <p class="page-account-contact__error">@Model.NotFollowedError</p>
            </div>
            <div class="alert-error register-error js-form-error js-form-error-Required">
                <svg class="alert__icon">
                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/dist/img/svg-sprite.svg#alert"></use>
                </svg>
                <p class="page-account-contact__error">@Model.PreferenceNotSavedError</p>
            </div>
        </div>
        <div id="allPublicationsPan">
            @{
                Html.RenderPartial("/Areas/Account/Views/Personalization/Publications.cshtml", Model.ChannelsViewModel);
            }
        </div>
        <div class="saveoption">
            <span class="helplink">@Html.Raw(Model.HelpLinkDetail)</span>
            <div class="complete-settings">
                @if (Model.EnableSavePreferencesCheck)
                {
                    <a class="registrationBtn button--filled button--outline validationChk" name="@Model.MyViewPageUrl" href="/">@Model.CompleteYourRegistrationText</a>
                }
                else
                {
                    <a class="registrationBtn button--filled button--outline validationChk" name="@Model.MyViewPageUrl" href="/">@Model.CompleteYourRegistrationText</a>
                }
            </div>
        </div>
        <div class="modal-overlay"></div>
        <div class="modal-view preferences">
            <p class="close-modal"></p>
            <h3>@Model.SaveSettingsAlertHeaderText</h3>
            <h4>@Model.SaveSettingsAlertMessageTextInRegistrationFlow</h4>
            <div class="buttonsPan">
                @if (Model.EnableSavePreferencesCheck)
                {
                    <a href="@Model.MyViewPageUrl" class="registrationBtn button--filled button--outline validationChk">@Model.PopupYesButtonText</a>
                }
                else
                {
                    <a href="/" name="@Model.MyViewPageUrl" class="registrationBtn button--filled button--outline validationChk">@Model.PopupYesButtonText</a>
                }
                <span class="cancel cancel-modal">@Model.PopupNoButtonText</span>
            </div>
        </div>

   

    </div>
    <input type="hidden" value="false" id="validatePriority" />
                }
                else if (Model != null && Model.IsAuthenticated)
                {

                    <div class="main__content myview-settings">
                        <div class="tableau-landing clearfix">
                            <div class="mysettingsHead clearfix">
                                <h1>@Model.Title</h1>
                                <div class="saveoption mtop-10 hidden-xs">
                                    <span class="saveview button--filled button--outline validationChk click-utag" data-info='{ "event_name": "myview_setting_save", "page_name":"@Model.Title","ga_eventCategory":"My View Settings Link","ga_eventAction":"Link Click","ga_eventLabel":"Save","click_through_destination":"Save"}'>@Model.SaveButtonText</span>
                                    <span class="gotoview"><a class="button--outline" href="@Model.MyViewPageUrl">@Model.GoToMyViewButtonText</a></span>
                                </div>
                            </div>


                            <div class="sub-heading-text">
                                @Html.Raw(Model.SectionDescription)
                            </div>
                            <div class="alert-error js-form-error js-form-error-Required">
                                <svg class="alert__icon">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/dist/img/svg-sprite.svg#alert"></use>
                                </svg>
                                <p class="page-account-contact__error"></p>
                            </div>

                            <div class="alert-success js-form-success js-form-success-Required">
                                <svg class="alert__icon">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/dist/img/svg-sprite.svg#alert"></use>
                                </svg>
                                <p class="page-account-contact__error"></p>
                            </div>
                            <div class="saveoption mb-10 hidden-large">
                                <span class="saveview button--filled button--outline">@Model.SaveButtonText</span>
                                <span class="gotoview"><a class="button--outline" href="@Model.MyViewPageUrl">@Model.GoToMyViewButtonText</a></span>
                            </div>
                            <div class="modal-overlay"></div>
                            <div class="modal-view preferences">
                                <p class="close-modal"></p>
                                <h3>@Model.SaveSettingsAlertHeaderText</h3>
                                <h4>@Model.SaveSettingsAlertMessageText</h4>

                                <div class="buttonsPan">
                                    <span class="saveview validationChk button--filled button--outline">@Model.PopupYesButtonText</span>
                                    <span class="cancel cancel-modal  button--outline">@Model.PopupNoButtonText</span>
                                </div>
                            </div>
                            <input type="hidden" value="0" id="validatePreference" />
                        </div>
                        <div id="allPublicationsPan">
                            @{ Html.RenderPartial("/Areas/Account/Views/Personalization/Publications.cshtml", Model.ChannelsViewModel); }
                        </div>

                        <div class="saveoption">
                            <span class="saveview button--filled button--outline validationChk">@Model.SaveButtonText</span>
                            <span class="gotoview"><a class="button--outline" href="@Model.MyViewPageUrl">@Model.GoToMyViewButtonText</a></span>
                        </div>
                    </div>
                    <input type="hidden" value="false" id="validateMyViewPriority" />
                                }
                                else
                                {
                                    <div class="page-account__sign-in-solo">
                                        @{ Html.RenderPartial("../Article/UserCallToAction", Model.CallToActionViewModel); }
                                    </div>
                                            }


<input type="hidden" name="followText" id="followText" value="FOLLOW" />
<input type="hidden" name="unfollowText" id="unfollowText" value="UNFOLLOW" />
<input type="hidden" name="followingButtonText" id="followingButtonText" value="FOLLOWING" />
@{
    Informa.Library.Utilities.Extensions.StringExtensions.WriteSitecoreLogs("MyviewSettings.cshtml Timer", sw, "MyviewSettings");
}