@model Informa.Web.Areas.Account.ViewModels.Registration.RegisterUserOptInsViewModel

<div class="register">
    @{var nextStepUrl = (Model.IsGlobalToggleEnabled && !string.IsNullOrEmpty(Model.NextStepUrl)) ? Model.NextStepUrl : Model.RegisterReturnUrl;}
    <form class="form-registration-optins"
          data-on-submit="/Account/api/RegistrationApi/SetOptIns/"
          data-on-success="@nextStepUrl">

        <div class="register_newsletter">
            <div class="page-registration">
                <h1 class="page-registration__header">@Model.Title</h1>
                <div class="next_right">
                    <button type="submit" class="button--filled button--fly-right">@Model.SubmitText</button>
                </div>
            </div>
            <hr />
            <p class="page-registration__introduction">@Model.SubTitle</p>
            <p class="page-registration__error
		   js-form-error
		   js-form-error-general">
                @Model.GeneralErrorText
            </p>

            <div>
                @{var CurrentPublication = string.Empty; }
                @for (int i = 0; i < Model.PublicationNewsletterOptIns.Count; i++)
                {

                    var item = Model.PublicationNewsletterOptIns[i];
                    var checkBobClassname = item.OptIn ?
                        "newsletter_checkbox label-check wcs-c-on" :
                        "newsletter_checkbox label-check";
                    if (item.OptIn)
                    {
                        CurrentPublication = item.Publication.Name;
                    }
                    <div class="newsletter_box">
                        <div class="site_div">
                            <h1 class="article-preview__headline">@item.Publication.Name</h1>
                        </div>
                        <hr>
                        <p>@Html.Raw(Model.Body)</p>
                        <div class="checkbox-wrapper">
                            <hr>
                            <div class="@checkBobClassname">
                                <input type="hidden" name="Newsletters[@i].PublicationCode" value="@item.Publication.Code" />
                                <input name="Newsletters[@i].NewsletterChecked"
                                       id="newsletters" type="checkbox"
                                       @(item.OptIn ? "checked='checked'" : string.Empty)
                                       data-checkbox-type="boolean" />

                                <span class="chk_box"></span>
                                <span>@Model.NewslettersLabelText</span>
                            </div>
                        </div>
                    </div>
                }
                <br />
                <div class="registrationSubmit_div">
                    <div class="page-registration__labeled-checkbox label-check">
                        <input name="Offers" id="Offers" type="checkbox"
                               data-checkbox-type="boolean" />

                        <span class="chk_box"></span>
                        <label class="checkbox-label" for="Offers">@Model.OffersLabelText.Replace("#PubName#", CurrentPublication)</label>
                    </div>
                    <div class="page-account__submit-wrapper">
                        <button type="submit" class="button--filled registration-final js-register-final">@Model.SubmitText</button>
                    </div>
                </div>
            </div>
        </div>

    </form>
</div>
