@model Informa.Web.Areas.Account.ViewModels.Management.EmailPreferencesViewModel

@if (Model.IsAuthenticated)
{
    <div class="page-account">

        <h1 class="page-account__header">@Model.Title</h1>
		@Model.Body
        <div class="page-preferences js-preferences-user-container">

            <p class="page-account__error js-form-error js-form-error-general">
                @Model.GeneralErrorText
            </p>

            <form   class="form-email-preferences"
                    data-on-submit="/Account/api/PreferencesApi/Update/">

				<div>
					<table>
						<thead>
							<tr>
								<td>@Model.NewsletterOptInTitleHeading</td>
								<td>@Model.NewsletterOptInReceiveEmailHeading</td>
							</tr>
						</thead>
						<tbody>
							@foreach (var newsletterOptIn in Model.NewsletterOptIns)
							{
								<tr>
									<td>@newsletterOptIn.NewsletterType</td>
									<td>
										<input name="NewsletterOptIns"
											   id="@newsletterOptIn.NewsletterType"
											   type="checkbox"
											   data-checkbox-type="value"
											   @(newsletterOptIn.OptIn ? "checked" : "")
											   value="@newsletterOptIn.NewsletterType">
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>

                <div class="labeled-checkbox page-preferences__offersoptin-confirm">
                    @*
                        This field is named a bit weird, but on purpose.
                        Email regulations require that promo emails are opt IN,
                        not opt OUT, so we needed to reverse this checkbox's
                        meaning. But, until the @Model name is updated, keeping
                        the field name and id the same for consistency.

                        If checked: user is opting-IN for promo emails
                        If not checked: user is opting-OUT of promo emails
                    *@
                    <input  name="DoNotSendOffersOptIn"
                            id="DoNotSendOffersOptIn"
                            type="checkbox"
                            data-checkbox-type="boolean"
                            data-checkbox-boolean-type="reverse"
                            @(@Model.DoNotSendOfferEmails ? "" : "checked")>
                    <label for="DoNotSendOffersOptIn" class="checkbox-label">@Model.EmailsLabel</label>
                </div>

                <div class="page-account__submit-wrapper">
                    <button type="submit" class="button--filled button--fly-right manage-preferences">@Model.SubmitText</button>
                </div>

                <div class="alert-success js-form-success">
                    <svg class="alert__icon">
                        <use xlink:href="/dist/img/svg-sprite.svg#check"></use>
                    </svg>
                    <p>@Model.PreferencesSavedMessage</p>
                </div>

            </form>

        </div>
    </div>
}
else
{
    <div class="page-account__sign-in-solo">
        @{ Html.RenderPartial("_SignInForm", Model.SignInViewModel); }
    </div>
}