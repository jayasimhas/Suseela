@model Informa.Web.Areas.Account.ViewModels.Management.EmailPreferencesViewModel

@if (Model.IsAuthenticated)
{
    <div class="page-account">

        <h1 class="page-account__header">@Model.Title</h1>
        <div class="page-preferences js-preferences-user-container">
            <div style="display: none;" class="js-preferences-user-error-container">
                <p style="display: none;" class="js-preferences-user-error js-preferences-user-error-general">@Model.GeneralErrorText</p>
            </div>
            <form   class="form-email-preferences"
                    data-on-submit="/Account/api/PreferencesApi/Update/">

                <div class="labeled-checkbox page-preferences__newsletteroptin-confirm">
                    <input  name="newsletterOptIn"
                            id="newsletterOptIn"
                            type="checkbox"
                            data-checkbox-type="boolean"
                            @(@Model.ReceivesNewsletterEmails ? "checked='checked'" : "")>
                    <label for="newsletterOptIn" class="checkbox-label">@Model.NewsletterLabel</label>
                </div>

                <div class="labeled-checkbox page-preferences__offersoptin-confirm">
                    <input  name="doNotSendOffersOptIn"
                            id="doNotSendOffersOptIn"
                            type="checkbox"
                            data-checkbox-type="boolean"
                            @(@Model.DoNotSendOfferEmails ? "checked='checked'" : "")>
                    <label for="doNotSendOffersOptIn" class="checkbox-label">@Model.EmailsLabel</label>
                </div>

                <div class="page-preferences__submit-wrapper">
                    <button type="submit" class="button--filled button--fly-right" >@Model.SubmitText</button>
                </div>

                <p style="display: none;" class="js-preferences-user-success">@Model.PreferencesSavedMessage</p>
            </form>
        </div>
    </div>
}
else
{
    Html.RenderPartial("_SignInForm", Model.SignInViewModel);
}
