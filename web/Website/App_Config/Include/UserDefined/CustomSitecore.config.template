<!--

Purpose: This include file shows how to change elements in the <settings> section
of the web.config file

To enable this, rename this file so that it has a ".config" extension

Notice that when changing simple settings like this, you can typically put in the
setting directly without using "patch:attribute" like we do in the structure below.
But you can also use "patch:attribute" for clarity:
    <setting name="RequireLockBeforeEditing">
      <patch:attribute name="value">false</patch:attribute>
    </setting>

-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <pipelines>
      <initialize>
        <processor type="Informa.Library.CustomSitecore.Pipelines.InitializeControllerFactory, Informa.Library" patch:instead="processor[@type='Sitecore.Mvc.Pipelines.Loader.InitializeControllerFactory, Sitecore.Mvc']"/>
        <processor
                   type="Informa.Library.CustomSitecore.Pipelines.RegisterHttpRoutes, Informa.Library"
                   factory="Autofac" ref="Informa.Library.CustomSitecore.Pipelines.RegisterHttpRoutes, Informa.Library" reusable="false" />

        <!-- Sitecore MVC Route Configuration-->
        <processor patch:before="processor[@type='Sitecore.Mvc.Pipelines.Loader.InitializeRoutes, Sitecore.Mvc']"
                   type="Informa.Web.CustomMvc.Pipelines.RegisterMvcRoutes, Informa.Web"
                   factory="Autofac" ref="Informa.Web.CustomMvc.Pipelines.RegisterMvcRoutes, Informa.Web" reusable="false" />
        <!-- Deleting this twice, for overriding two separate instances from two disparate include files -->
        <processor type="Sitecore.Pipelines.Initialize.PrecompileSpeakViews, Sitecore.Speak.Client">
          <patch:delete />
        </processor>
        <processor type="Sitecore.Pipelines.Initialize.PrecompileSpeakViews, Sitecore.Speak.Client">
          <patch:delete />
        </processor>
      </initialize>

      <mvc.renderRendering>
        <processor type="Informa.Library.CustomSitecore.Pipelines.AddIndexUpdateCacheFlag, Informa.Library" patch:after="processor[@type='Sitecore.HtmlCache.Pipeline.Mvc.RenderRendering.GenerateCacheKey, Sitecore.HtmlCache']" />
        <!-- Sitecore.Mvc.Pipelines.Response.RenderRendering.GenerateCacheKey, Sitecore.Mvc -->
        <processor type="Informa.Library.CustomSitecore.Pipelines.RenderRenderings.ExecuteRenderer, Informa.Library" patch:instead="processor[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.ExecuteRenderer, Sitecore.Mvc']" />
      </mvc.renderRendering>

      <httpRequestBegin>
        <processor type="Informa.Library.CustomSitecore.Pipelines.HttpRequest.ArticleItemResolver, Informa.Library"
                  ref="Informa.Library.CustomSitecore.Pipelines.HttpRequest.ArticleItemResolver, Informa.Library"
                  factory="Autofac"
                  patch:before="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']"
                  reusable="false" />
        <processor type="Informa.Library.CustomSitecore.Pipelines.HttpRequest.LegacyRedirectResolver, Informa.Library"
                   ref="Informa.Library.CustomSitecore.Pipelines.HttpRequest.LegacyRedirectResolver, Informa.Library"
                   factory="Autofac"
                   patch:before="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']"
                   reusable="false" />       
        <processor type="Informa.Library.CustomSitecore.Pipelines.HttpRequest.NotFoundResolver, Informa.Library"
                   ref="Informa.Library.CustomSitecore.Pipelines.HttpRequest.NotFoundResolver, Informa.Library"
                   factory="Autofac"
                   patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']"
                   reusable="false" />
        <processor type="Informa.Library.CustomSitecore.Pipelines.HttpRequest.NewRelicTransactionNameProcessor, Informa.Library" 
                   ref="Informa.Library.CustomSitecore.Pipelines.HttpRequest.NewRelicTransactionNameProcessor, Informa.Library"
                   factory="Autofac"
                   patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']"
                   reusable="false" />
        <processor type="Sitecore.Pipelines.HttpRequest.ExecuteRequest, Sitecore.Kernel">
          <patch:attribute name="type">Informa.Library.CustomSitecore.Pipelines.HttpRequest.InformaExecuteRequest,Informa.Library</patch:attribute>
        </processor>
      </httpRequestBegin>

      <getLookupSourceItems>
        <processor patch:before="*[@type='Sitecore.Pipelines.GetLookupSourceItems.ProcessQuerySource, Sitecore.Kernel']" type="Informa.Library.CustomSitecore.Pipelines.DataSourceMutiSitePathResolver, Informa.Library" />
      </getLookupSourceItems>
      
      <publishItem>
        <processor patch:after="*[@type='Sitecore.Publishing.Pipelines.PublishItem.DetermineAction, Sitecore.Kernel']" type="Informa.Library.CustomSitecore.Pipelines.PublishItem.ItemsPublishingProcessor, Informa.Library" 
                   factory="Autofac" 
                   ref="Informa.Library.CustomSitecore.Pipelines.PublishItem.ItemsPublishingProcessor, Informa.Library" 
                   reusable="false" />
      </publishItem>
#if ($AutoGenerateDictionaryItems == "true")
      <!--<getTranslation>
      <processor type="Informa.Library.CustomSitecore.Pipelines.GenerateIfDictionaryKeyNotFound, Informa.Library"
                 ref="Informa.Library.CustomSitecore.Pipelines.GenerateIfDictionaryKeyNotFound, Informa.Library"
                 factory="Autofac"
                 patch:after="processor[@type='Sitecore.Pipelines.GetTranslation.TryGetFromCoreDatabase, Sitecore.Kernel']" />
    </getTranslation>-->
#end
      <speak.client.resolveScript>
        <processor type="Sitecore.Resources.Pipelines.ResolveScript.Controls, Sitecore.Speak.Client">
          <sources hint="raw:AddSource">
            <source folder="/sitecore/shell/client/Applications/Nlm Export" deep="true" category="nlmexport" pattern="*.js,*.css"></source>
          </sources>
        </processor>
      </speak.client.resolveScript>
    </pipelines>

    <events>
      <event name="item:added">
        <handler type="Informa.Library.CustomSitecore.Events.AddFromBranchPreset, Informa.Library" method="OnItemAdded" />        
      </event>
      
      <event name="publish:end">
        <handler type="Sitecore.Publishing.HtmlCacheClearer, Sitecore.Kernel" method="ClearCache">
          <sites hint="list">
            <site name="invivo">InVivo</site>
            <site name="medtech">MedtechInsight</site>
            <site name="pink">PinkSheet</site>
            <site name="rose">RoseSheet</site>
			<site name="ScripIntelligence">ScripIntelligence</site>
            <site name="Commodities">Commodities</site>
            <site name="Agrow">Agrow</site>
            <site name="AnimalPharm">AnimalPharm</site>
            <site name="PolicyandLeg">PolicyandLeg</site>
            <site name="InsuranceDay">InsuranceDay</site>
            <site name="Lloydslist">Lloydslist</site>
          </sites>
        </handler>
      </event>
      <event name="publish:end:remote">
        <handler type="Sitecore.Publishing.HtmlCacheClearer, Sitecore.Kernel" method="ClearCache">
          <sites hint="list">
            <site name="invivo">InVivo</site>
            <site name="medtech">MedtechInsight</site>
            <site name="pink">PinkSheet</site>
            <site name="rose">RoseSheet</site>
			<site name="ScripIntelligence">ScripIntelligence</site>
            <site name="Commodities">Commodities</site>
            <site name="Agrow">Agrow</site>
            <site name="AnimalPharm">AnimalPharm</site>
            <site name="PolicyandLeg">PolicyandLeg</site>
            <site name="InsuranceDay">InsuranceDay</site>
            <site name="Lloydslist">Lloydslist</site>
          </sites>
        </handler>
      </event>
    </events>

    <hooks>
      <hook type="Sitecore.Diagnostics.MemoryMonitorHook, Sitecore.Kernel">
        <param desc="Threshold">1200MB</param>
        <ClearCaches>false</ClearCaches>
        <GarbageCollect>false</GarbageCollect>
        <AdjustLoadFactor>false</AdjustLoadFactor>
      </hook>
    </hooks>

    <encodeNameReplacements>
      <replace mode="on" find=" " replaceWith="-" />
    </encodeNameReplacements>

    <linkManager>
      <providers>
        <add name="sitecore">
		  <patch:attribute name="type">Informa.Library.CustomSitecore.Providers.CustomLinkProvider, Informa.Library</patch:attribute>
          <patch:attribute name="languageEmbedding">never</patch:attribute>
          <patch:attribute name="lowercaseUrls">true</patch:attribute>
        </add>
        <add name="informaEmailLinkProvider" type="Informa.Library.CustomSitecore.Providers.EmailLinkProvider, Informa.Library" lowercaseUrls="true"  />
      </providers>
    </linkManager>

    <sites>
      <site name="shell">
        <patch:attribute name="enableWorkflow">true</patch:attribute>
        <patch:attribute name="startItem">/sites</patch:attribute>
        <patch:attribute name="contentStartItem">/sites</patch:attribute>
      </site>
    </sites>

    <cacheSizes>
      <sites>
        <website>
          <html>${Cache.HtmlCache.Website}</html>
        </website>
        <InVivo>
          <html>${Cache.HtmlCache.Website}</html>
        </InVivo>
        <MedtechInsight>
          <html>${Cache.HtmlCache.Website}</html>
        </MedtechInsight>
        <PinkSheet>
          <html>${Cache.HtmlCache.Website}</html>
        </PinkSheet>
        <RoseSheet>
          <html>${Cache.HtmlCache.Website}</html>
        </RoseSheet>
      </sites>
    </cacheSizes>

    <mediaLibrary>
      <mediaTypes>
        <mediaType name="PDF file">
          <forceDownload>false</forceDownload>
        </mediaType>

        <mediaType name="SVG" extensions="svg">
          <mimeType>image/svg+xml</mimeType>
          <forceDownload>false</forceDownload>
          <sharedTemplate>system/media/unversioned/file</sharedTemplate>
          <versionedTemplate>system/media/versioned/file</versionedTemplate>
          <mediaValidator type="Sitecore.Resources.Media.ImageValidator"/>
          <thumbnails>
            <generator type="Sitecore.Resources.Media.ImageThumbnailGenerator, Sitecore.Kernel">
              <extension>png</extension>
            </generator>
            <width>150</width>
            <height>150</height>
            <backgroundColor>#FFFFFF</backgroundColor>
          </thumbnails>
        </mediaType>
      </mediaTypes>
    </mediaLibrary>

    <sitecore.experienceeditor.speak.requests>
      <request name="Optimization.SuggestedTests.Count" type="Sitecore.ContentTesting.Requests.ExperienceEditor.SuggestedTestsCountRequest, Sitecore.ContentTesting">
        <patch:attribute name="type">Informa.Web.CustomMvc.Pipelines.SuggestedTestsCountRequest, Informa.Web</patch:attribute>
      </request>
    </sitecore.experienceeditor.speak.requests>

    <settings>

      <!--<setting name="Analytics.HostName">
        <patch:attribute name="value">[CHANGEME]</patch:attribute>
      </setting>-->
		<setting name="ContentTesting.AutomaticContentTesting.Enabled" value="false" />
		<setting name="Xdb.Enabled" value="false" />
      <!--  REQUIRE LOCK BEFORE EDITING
            If true, the user must have a lock on a document before
            he can edit it, otherwise it is always ready for editing
			MG: The explicit override here was reverted to the default setting to allow workflow locks/editing to behave as needed
      -->
      <setting name="RequireLockBeforeEditing" value="true"/>
	  <!-- Protocol -->
	  <setting name="Site.Protocol" value="${Site.Protocol}" />

		<setting name="Preview.ResolveSite">
			<patch:attribute name="value">true</patch:attribute>
		</setting>
		
      <!-- Velir Settings -->
      <setting  name="Env.Value" value="${Env.Value}" />
      <!-- Production Host -->
      <setting  name="Env.IsProduction" value="false" />

      <!-- Production Host -->
      <setting  name="Host.Production" value="[CHANGEME]" />

      <!-- Mail Settings -->
      <setting name="Mail.MailServerFromAddress" value="${Mail.MailServerFromAddress}"/>
      <setting name="Mail.MailServerEnableSsl" value="${Mail.MailServerEnableSsl}" />

      <setting name="MailServer">
        <patch:attribute name="value">${Mail.MailServer}</patch:attribute>
      </setting>

      <setting name="MailServerUserName">
        <patch:attribute name="value">${Mail.MailServerUserName}</patch:attribute>
      </setting>

      <setting name="MailServerPassword">
        <patch:attribute name="value">${Mail.MailServerPassword}</patch:attribute>
      </setting>

      <setting name="MailServerPort">
        <patch:attribute name="value">${Mail.MailServerPort}</patch:attribute>
      </setting>
      
      <!-- Master ID and Password Settings -->
      <setting name="MasterId" value="${MasterId}"/>
      <setting name="MasterPassword" value="${MasterPassword}" />

      <!-- SuperAdmin ID and Password Settings -->
      <setting name="SuperAdminId" value="pmbi_admin@informa.com"/>
      <setting name="SuperAdminPassword" value="Informa@2017" />
      
      <!-- Multiple Salesforce Support Settings -->
      <setting name="MultipleSalesforceSupportEnabled" value="${CRMManager.MultipleSalesforceSupportEnabled}" />
      


      <!-- ExactTarget Settings -->
      <setting name="ExactTarget.UseSandbox" value="${ExactTarget.UseSandbox}" />
      <setting name="ExactTarget.ClientId" value="${ExactTarget.ClientId}" />
      <setting name="ExactTarget.SecretKey" value="${ExactTarget.SecretKey}" />

      <!-- Salesforce Fallback Settings -->
      <setting name="SalesforceSessionFactoryConfiguration.Url" value="${CRMManager.SalesforceUrl}" />
      <setting name="SalesforceSessionFactoryConfiguration.Username" value="${CRMManager.SalesforceUserName}" />
      <setting name="SalesforceSessionFactoryConfiguration.Password" value="${CRMManager.SalesforcePassword}" />
      <setting name="SalesforceSessionFactoryConfiguration.Token" value="${CRMManager.SalesforceToken}" />
      <setting name="SalesforceSessionFactoryConfiguration.Timeout" value="${CRMManager.SalesforceTimeout}" />
      <setting name="SalesforceSessionFactoryConfiguration.EbiUrl" value="${CRMManager.EbiUrl}" />


      <!-- HIDDEN SETTING!  Suggestion from sitecore to speed up the back end content editor. -->
      <setting name="ContentEditor.RenderCollapsedSections" value="false"/>

      <setting name="HtmlEditor.RemoveScripts">
        <patch:attribute name="value">false</patch:attribute>
      </setting>

      <setting name="InvalidItemNameChars">
        <patch:attribute name="value">\/:?&quot;&lt;&gt;|[]-</patch:attribute>
      </setting>

      <setting name="Media.RequestExtension">
        <patch:attribute name="value"></patch:attribute>
      </setting>

      <setting name="Mvc.AllowDataSourceNesting">
        <patch:attribute name="value">false</patch:attribute>
      </setting>

      <setting name="IgnoreUrlPrefixes">
        <patch:attribute name="value">/bundles/|/html_templates/|/GenerateSitemap/CreateSitemap.axd|/sitecore/default.aspx|/trace.axd|/webresource.axd|/sitecore/shell/Controls/Rich Text Editor/Telerik.Web.UI.DialogHandler.aspx|/BotDetectCaptcha.ashx|/sitecore/shell/applications/content manager/telerik.web.ui.dialoghandler.aspx|/sitecore/shell/Controls/Rich Text Editor/Telerik.Web.UI.SpellCheckHandler.axd|/Telerik.Web.UI.WebResource.axd|/sitecore/admin/upgrade/|/layouts/testing|/sitecore/service/</patch:attribute>
      </setting>

      <setting name="ItemCloning.ForceUpdate">
        <patch:attribute name="value">true</patch:attribute>
      </setting>

      <setting name="MasterVariablesReplacer">
        <patch:attribute name="value">Informa.Library.CustomSitecore.Pipelines.ExpandNewTokensOnAllItems.InformaMasterVariablesReplacer,Informa.Library</patch:attribute>
      </setting>

      <!-- Scalability Settings -->
      <setting name="MaxWorkerThreads" value="${Sitecore.MaxWorkerThreads}" />
      
      <!-- Caching -->
      <setting name="Caching.DisableCacheSizeLimits" value="${Caching.DisableCacheSizeLimits}" />
      
      <!-- Glass Interface Factory Settings -->
      <setting name="GlassInterfaceFactory.DebuggingEnabled" value="true" />

      <setting name="WebEdit.ShowNumberOfLockedItemsOnButton" value="false" />
      
      <setting name="DCD.OldDealsURL" value="${DCD.OldDealsURL}" />
      
      <setting name="DCD.PMBIDealsURL" value="${DCD.PMBIDealsURL}" />
      
      <setting name="NLM.ExportPath" value="${NLM.ExportPath}" />
      <setting name="VwbDropdownCount" value="100"></setting>
      <setting name="Taxonomy.SubjectPath" value="/sitecore/content/pharma/vertical globals/taxonomy/subjects"></setting>
      <setting name="Taxonomy.RegionPath" value="/sitecore/content/environment globals/taxonomy/regions"></setting>
      <setting name="Taxonomy.AreaPath" value="/sitecore/content/pharma/vertical globals/taxonomy/therapy areas"></setting>
      <setting name="Taxonomy.IndustryPath" value="/sitecore/content/{0}/vertical globals/taxonomy/industries"></setting>
      <setting name="Taxonomy.DeviceAreaPath" value="/sitecore/content/pharma/vertical globals/taxonomy/device areas"></setting>
      <setting name="Taxonomy.Commercial" value="/sitecore/content/agri/vertical globals/taxonomy/commercial"></setting>
      <setting name="Taxonomy.Commodity" value="/sitecore/content/agri/vertical globals/taxonomy/commodity"></setting>
      <setting name="Taxonomy.CommodityFactors" value="/sitecore/content/agri/vertical globals/taxonomy/commodity factors"></setting>
      <setting name="Taxonomy.AgencyRegulator" value="/sitecore/content/agri/vertical globals/taxonomy/agency regulator"></setting>
      <setting name="Taxonomy.Companies.Agri" value="/sitecore/content/agri/vertical globals/taxonomy/companies"></setting>
      <setting name="Taxonomy.Companies.Maritime" value="/sitecore/content/Maritime/vertical globals/taxonomy/companies"></setting>
      <setting name="Taxonomy.CropProtection" value="/sitecore/content/Agri/Vertical Globals/Taxonomy/Crop Protection"></setting>
      <setting name="Taxonomy.AnimalHealth" value="/sitecore/content/Agri/Vertical Globals/Taxonomy/Animal Health"></setting>
      <setting name="Taxonomy.Markets" value="/sitecore/content/Maritime/Vertical Globals/Taxonomy/Markets"></setting>
      <setting name="Taxonomy.Topic" value="/sitecore/content/Maritime/Vertical Globals/Taxonomy/Topic"></setting>
      <setting name="Taxonomy.Sectors" value="/sitecore/content/Maritime/Vertical Globals/Taxonomy/Sectors"></setting>
      <setting name="Search.NewerArticlesBoosting.Enabled" value="${Search.NewerArticlesBoosting.Enabled}" />
      <setting name="Search.NewerArticlesBoosting.BoostFunction" value="${Search.NewerArticlesBoosting.BoostFunction}" />
      <!--Vertical names-->
      <setting name="Environment.Globals" value="Environment Globals"></setting>
      <setting name="Vertical.Pharma" value="Pharma"></setting>
      <setting name="Vertical.Agri" value="Agri"></setting>
      <setting name="Vertical.Maritime" value="Maritime"></setting>
      <!--Taxonomy Folders-->
      <setting name="Taxonomy.RegionsTaxonomyFolder" value="RegionsTaxonomyFolder"></setting>
      <setting name="Taxonomy.AgencyRegulatorTaxonomyFolder" value="AgencyRegulatorTaxonomyFolder"></setting>
      <setting name="Taxonomy.AnimalHealthTaxonomyFolder" value="AnimalHealthTaxonomyFolder"></setting>
      <setting name="Taxonomy.CommercialTaxonomyFolder" value="CommercialTaxonomyFolder"></setting>
      <setting name="Taxonomy.CommodityTaxonomyFolder" value="CommodityTaxonomyFolder"></setting>
      <setting name="Taxonomy.CommodityFactorsTaxonomyFolder" value="CommodityFactorsTaxonomyFolder"></setting>
      <setting name="Taxonomy.CompaniesTaxonomyFolder" value="CompaniesTaxonomyFolder"></setting>
      <setting name="Taxonomy.CropProtectionaxonomyFolder" value="CropProtectionaxonomyFolder"></setting>
      <setting name="Taxonomy.IndustriesTaxonomyFolder" value="IndustriesTaxonomyFolder"></setting>
      <setting name="Taxonomy.HotTopicsTaxonomyFolder" value="HotTopicsTaxonomyFolder"></setting>
      <setting name="Taxonomy.MarketsTaxonomyFolder" value="MarketsTaxonomyFolder"></setting>
      <setting name="Taxonomy.RegularsTaxonomyFolder" value="RegularsTaxonomyFolder"></setting>
      <setting name="Taxonomy.SectorsTaxonomyFolder" value="SectorsTaxonomyFolder"></setting>
      <setting name="Taxonomy.TopicTaxonomyFolder" value="TopicTaxonomyFolder"></setting>
      <setting name="Taxonomy.SubjectsTaxonomyFolder" value="SubjectsTaxonomyFolder"></setting>
      <setting name="Taxonomy.TherapyAreasTaxonomyFolder" value="TherapyAreasTaxonomyFolder"></setting>
      <setting name="Taxonomy.DeviceAreasTaxonomyFolder" value="DeviceAreasTaxonomyFolder"></setting>
      <setting name="Taxonomy.IndustryTaxonomyFolder" value="IndustryTaxonomyFolder"></setting>     
    </settings>
  </sitecore>
</configuration>
