<#@ template language="C#"  #>
<#@ assembly name="System.Core" #>

<#@ include file="Helpers.tt" #>
<#@ include file="StringExtensions.tt" #>
<#@ include file="GeneralExtensions.tt" #>
<#@ include file="Inflector.tt" #>

<#@ import namespace="System" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="HedgehogDevelopment.SitecoreProject.VSIP.CodeGeneration.Models" #>

<#@ parameter name="Model" type="HedgehogDevelopment.SitecoreProject.VSIP.CodeGeneration.Models.ProjectHeader" #>
<#@ parameter name="DefaultNamespace" type="System.String" #>

#pragma warning disable 1591
#pragma warning disable 0108
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Team Development for Sitecore.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics.CodeAnalysis;
using Glass.Mapper.Sc.Configuration.Attributes;
using Glass.Mapper.Sc.Maps;
using Jabberwocky.Glass.Factory;
using Jabberwocky.Glass.Factory.Attributes;
using Jabberwocky.Glass.Models;
using System;   
using System.Collections.Generic;   
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using Sitecore.Globalization;
using Sitecore.Data;
using Informa.Models.InterfaceFactory;
using Sitecore.Data;

<#
// Calculate the top leve namespace as configured in the target project and
// base namespace as defined in the TDS project
string fullNamespace = JoinNamespaces(DefaultNamespace, Model.BaseNamespace);
#>

namespace Informa.Models.FieldSources
{
  
 
  public class FactoryInterfaceDataSource : Sitecore.Buckets.FieldTypes.IDataSource
  {
      public Sitecore.Data.Items.Item[] ListQuery(Sitecore.Data.Items.Item item)
      {
          item.Fields.ReadAll();

          return item.Fields.Select(x => x.InnerItem).ToArray();

          //List<TemplateItem> templates = new List<TemplateItem>();
          //var template = item.Template;
          //if (template != null)
          //{
          //    if (template.ID == new ID("f4dbbc93-2591-4aa8-b71a-1dc4acd5c941"))
          //    {
          //        templates.Add(template);
          //    }

          //    foreach (var t in template.BaseTemplates) 

          //}

          //    return item.Parent.Children.ToArray();

      }
}
}
				  namespace Informa.Models.InterfaceFactory
{
  
 /// <summary>
	/// IInterfaceTemplate Interface
	/// <para></para>
	/// <para>Path: /sitecore/templates/Velir/FactoryInterface/InterfaceTemplate</para>	
	/// <para>ID: f4dbbc93-2591-4aa8-b71a-1dc4acd5c941</para>	
	/// </summary>
	[GlassFactoryInterface]
	public partial interface IInterfaceFactoryTemplate 
	{
				}
				} 