<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAmMAAAAeCAIAAADviY4cAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADfGlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS42LWMxMTEgNzkuMTU4MzI1LCAyMDE1LzA5LzEwLTAxOjEwOjIwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjExNDIyQ0E2NDcyNjY4MTFBQjA4RUJCRTAwNkYy
        NDM4IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjU0RTc3NkY0RDhBRjExRTVBNjc5QjZGNzk3OTIy
        NDdCIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjU0RTc3NkYzRDhBRjExRTVBNjc5QjZGNzk3OTIy
        NDdCIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgTWFjaW50b3NoIj4gPHhtcE1N
        OkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NjcyMmIxMTgtZDhjYy00YWZmLWE4
        MDUtNTZkMTNiODIwZjlmIiBzdFJlZjpkb2N1bWVudElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6ZjAw
        NDI5YjAtMjExOC0xMTc5LTliYmEtOTZiMWJjMTU4NTZkIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3Jk
        ZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+Rc2yIwAABB9JREFUeF7tm8FNHDEU
        hukEpFSC0gJKCaQCqIA0QAFLARSwd+6cyZkzV7iSj/3Ji+VZvKuBRBryWZ9GnufnNx4u39q7HBwffxUR
        EZG30JQiIiIjNKWIiMgITSkiIjJCU4qIiIzQlCIiIiM0pYiIyAhNKSIiMkJTioiIjNhtytXq6u7u55Sz
        s/Mucx9OT79fXPzg2sU/EBbG8tbr9dY4dHEREZEBu015fX39vK0hvC5zH1KNaxf/QFgYj5gaMXFaFxcR
        ERmwrynv7+8xTcvJybckZJs43WKSkMw2OMOU1GmL06fmdFdau1WuPGJ/U2ZKvQ796buM33G6mMBQW1lE
        RJbIvqbcemiJA25vb6Mf2sPDQ7lkvV6/Rp+fHx+fVqsrgimVloJc6aOTzGo9miH6TE8yxRH2y+RNI1gS
        ah93c3PDNVNaeEoScpt+TeQpl5eXvEJuazqPyErS2nfkpV6jvx9KyxClKJgIbXoULCIiS2FfU2IIOtXi
        tnISkfRJI44n6KMK4qWibMtiHa5xZ24HpqRhx5gmGuNBJGSUPvEYi8eRVsYiITWLraYkjWolYMTPbSSX
        FWb9JBDPx4K8I6/zMmGzBnLKizWU9TAry041ERFZHDO/pyTIZotOtBFiKTSJk0go/8VDuU01rhnaaco4
        EmLfqDHEQCwj9UlIPG7b05TZlaY4dTKUClkGhqOT89W8Mq1yanlt8QyVGiPOKi4iIsti/p6y3NA1RpnF
        KFaL7dKIVLXkwE5TdkPTVstIGiSypynboZrSLRLnsZuMj9MIdsuDbmjaKlNERBbE/O8pY5fOoDTitUXL
        bSsVIvS5pkjnm3Z06xBBOm2rU9CkAVOSWZE2Xpltv5tCWW650s8GEVPiy7Oz85c5jQ5redAN8UFhs8A/
        rTJFRGRBzDdljiIfH59ygAmIBHNw21kkx6S5TbXSRjLr4DS3Ge2KxL7tMhjKaOrPO31th2pKu8hN1mta
        a+UyaIYypR2qd+QPQv36HZCIiCyL+aaEyCzbynxJGXHmly/ZU0ZjtFgt1QiiE24jlbYCjX4VzyygbH41
        Q5yEjGZVqZlf0FSRDLXMM2UeyhtRPH0acayZWxbfHczWg7KtzF8g1UREZHG8y5QlxTSUkJ0T15IKtkhO
        VMFQzJGC+Ca3NDrxXDJJoF+mzNzWSSSwgAyVIOPLjNbEMM+Uq+ZfQejnveo1sx6ClZYKbHDrL0DLxwIR
        EVkiu025E2yHaSKPIkeODLXBtyATuuBb8KCtlbOMcucHsrVygrUMOpFiJQAJf2lJIiLyz/gAU/6fZBPJ
        xpGtJy074/raUkREPg2acj455q3WngaLiMinQVO+ixwyt8ewIiLyydCUIiIiIzSliIjICE0pIiIyQlOK
        iIiM0JQiIiIjDr4cHomIiMh2Do9+AevZ6dWvrVnvAAAAAElFTkSuQmCC
</value>
  </data>
</root>