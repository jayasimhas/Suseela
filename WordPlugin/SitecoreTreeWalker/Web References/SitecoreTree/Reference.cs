//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 

using System.Collections.Generic;

#pragma warning disable 1591

namespace SitecoreTreeWalker.SitecoreTree {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SCTreeSoap", Namespace="https://tempuri.org/")]
    public partial class SCTree : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCharacterStylesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParagraphStylesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxLengthShortSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxLengthLongSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildrenDirectoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralTagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHierarchyByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaLibraryItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMediaStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentIssuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemDisplayNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIssuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIssueDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicationFrequencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchIndustriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleDetailsBGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWordVersionNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWordVersionNumByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchTaxonomyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRemainingAttemptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleDynamicUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDynamicUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleGuidByNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback LucArtGuidByNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuthorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffAndGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoesArticleHaveTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoesArticleGuidHaveTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoesArticleExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSDRootPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGraphicRootPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoesArticleGuidExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback PreviewUrlArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback MediaPreviewUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtPreInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtPreInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkflowStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetWorkflowStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWidthHeightMIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkflowStateByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetWorkflowStateByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleSizesForPublicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoesArticleNameAlreadyExistInIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPrimaryIndustryOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAvailableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCompaniesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCompaniesWithRelatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsContinuousPublishingPublicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupportEmailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SCTree() {
            this.Url = global::SitecoreTreeWalker.Properties.Settings.Default.SitecoreTreeWalker_SitecoreTree_SCTree;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetChildrenCompletedEventHandler GetChildrenCompleted;
        
        /// <remarks/>
        public event GetCharacterStylesCompletedEventHandler GetCharacterStylesCompleted;
        
        /// <remarks/>
        public event GetParagraphStylesCompletedEventHandler GetParagraphStylesCompleted;
        
        /// <remarks/>
        public event GetDocumentPasswordCompletedEventHandler GetDocumentPasswordCompleted;
        
        /// <remarks/>
        public event GetMaxLengthShortSummaryCompletedEventHandler GetMaxLengthShortSummaryCompleted;
        
        /// <remarks/>
        public event GetMaxLengthLongSummaryCompletedEventHandler GetMaxLengthLongSummaryCompleted;
        
        /// <remarks/>
        public event GetChildrenDirectoriesCompletedEventHandler GetChildrenDirectoriesCompleted;
        
        /// <remarks/>
        public event GetGeneralTagsCompletedEventHandler GetGeneralTagsCompleted;
        
        /// <remarks/>
        public event GetHierarchyCompletedEventHandler GetHierarchyCompleted;
        
        /// <remarks/>
        public event GetHierarchyByGuidCompletedEventHandler GetHierarchyByGuidCompleted;
        
        /// <remarks/>
        public event GetMediaLibraryItemCompletedEventHandler GetMediaLibraryItemCompleted;
        
        /// <remarks/>
        public event GetMediaStatisticsCompletedEventHandler GetMediaStatisticsCompleted;
        
        /// <remarks/>
        public event GetArticleCategoriesCompletedEventHandler GetArticleCategoriesCompleted;
        
        /// <remarks/>
        public event GetWebCategoriesCompletedEventHandler GetWebCategoriesCompleted;
        
        /// <remarks/>
        public event GetCurrentIssuesCompletedEventHandler GetCurrentIssuesCompleted;
        
        /// <remarks/>
        public event GetItemDisplayNameCompletedEventHandler GetItemDisplayNameCompleted;
        
        /// <remarks/>
        public event GetIssuesCompletedEventHandler GetIssuesCompleted;
        
        /// <remarks/>
        public event GetIssueDateCompletedEventHandler GetIssueDateCompleted;
        
        /// <remarks/>
        public event GetPublicationFrequencyCompletedEventHandler GetPublicationFrequencyCompleted;
        
        /// <remarks/>
        public event SearchIndustriesCompletedEventHandler SearchIndustriesCompleted;
        
        /// <remarks/>
        public event GetArticleDetailsCompletedEventHandler GetArticleDetailsCompleted;
        
        /// <remarks/>
        public event GetArticleDetailsBGCompletedEventHandler GetArticleDetailsBGCompleted;
        
        /// <remarks/>
        public event GetWordVersionNumCompletedEventHandler GetWordVersionNumCompleted;
        
        /// <remarks/>
        public event GetWordVersionNumByGuidCompletedEventHandler GetWordVersionNumByGuidCompleted;
        
        /// <remarks/>
        public event SearchTaxonomyCompletedEventHandler SearchTaxonomyCompleted;
        
        /// <remarks/>
        public event GetPublicationsCompletedEventHandler GetPublicationsCompleted;
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event GetRemainingAttemptsCompletedEventHandler GetRemainingAttemptsCompleted;
        
        /// <remarks/>
        public event GetArticleUrlCompletedEventHandler GetArticleUrlCompleted;
        
        /// <remarks/>
        public event GetArticleDynamicUrlCompletedEventHandler GetArticleDynamicUrlCompleted;
        
        /// <remarks/>
        public event GetDynamicUrlCompletedEventHandler GetDynamicUrlCompleted;
        
        /// <remarks/>
        public event GetArticleGuidByNumCompletedEventHandler GetArticleGuidByNumCompleted;
        
        /// <remarks/>
        public event LucArtGuidByNumCompletedEventHandler LucArtGuidByNumCompleted;
        
        /// <remarks/>
        public event GetAuthorsCompletedEventHandler GetAuthorsCompleted;
        
        /// <remarks/>
        public event GetStaffAndGroupsCompletedEventHandler GetStaffAndGroupsCompleted;
        
        /// <remarks/>
        public event DoesArticleHaveTextCompletedEventHandler DoesArticleHaveTextCompleted;
        
        /// <remarks/>
        public event DoesArticleGuidHaveTextCompletedEventHandler DoesArticleGuidHaveTextCompleted;
        
        /// <remarks/>
        public event DoesArticleExistCompletedEventHandler DoesArticleExistCompleted;
        
        /// <remarks/>
        public event GetSDRootPathCompletedEventHandler GetSDRootPathCompleted;
        
        /// <remarks/>
        public event GetGraphicRootPathCompletedEventHandler GetGraphicRootPathCompleted;
        
        /// <remarks/>
        public event DoesArticleGuidExistCompletedEventHandler DoesArticleGuidExistCompleted;
        
        /// <remarks/>
        public event PreviewUrlArticleCompletedEventHandler PreviewUrlArticleCompleted;
        
        /// <remarks/>
        public event MediaPreviewUrlCompletedEventHandler MediaPreviewUrlCompleted;
        
        /// <remarks/>
        public event GetArtPreInfoCompletedEventHandler GetArtPreInfoCompleted;
        
        /// <remarks/>
        public event GetArtPreInfosCompletedEventHandler GetArtPreInfosCompleted;
        
        /// <remarks/>
        public event GetWorkflowStateCompletedEventHandler GetWorkflowStateCompleted;
        
        /// <remarks/>
        public event SetWorkflowStateCompletedEventHandler SetWorkflowStateCompleted;
        
        /// <remarks/>
        public event GetWidthHeightMICompletedEventHandler GetWidthHeightMICompleted;
        
        /// <remarks/>
        public event GetWorkflowStateByGuidCompletedEventHandler GetWorkflowStateByGuidCompleted;
        
        /// <remarks/>
        public event SetWorkflowStateByGuidCompletedEventHandler SetWorkflowStateByGuidCompleted;
        
        /// <remarks/>
        public event GetArticleSizesForPublicationCompletedEventHandler GetArticleSizesForPublicationCompleted;
        
        /// <remarks/>
        public event DoesArticleNameAlreadyExistInIssueCompletedEventHandler DoesArticleNameAlreadyExistInIssueCompleted;
        
        /// <remarks/>
        public event HasPrimaryIndustryCompletedEventHandler HasPrimaryIndustryCompleted;
        
        /// <remarks/>
        public event IsAvailableCompletedEventHandler IsAvailableCompleted;
        
        /// <remarks/>
        public event GetDealInfoCompletedEventHandler GetDealInfoCompleted;
        
        /// <remarks/>
        public event GetAllCompaniesCompletedEventHandler GetAllCompaniesCompleted;
        
        /// <remarks/>
        public event GetAllCompaniesWithRelatedCompletedEventHandler GetAllCompaniesWithRelatedCompleted;
        
        /// <remarks/>
        public event IsContinuousPublishingPublicationCompletedEventHandler IsContinuousPublishingPublicationCompleted;
        
        /// <remarks/>
        public event GetSupportEmailCompletedEventHandler GetSupportEmailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetChildren", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetChildren(string path, string username, string password) {
            object[] results = this.Invoke("GetChildren", new object[] {
                        path,
                        username,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenAsync(string path, string username, string password) {
            this.GetChildrenAsync(path, username, password, null);
        }
        
        /// <remarks/>
        public void GetChildrenAsync(string path, string username, string password, object userState) {
            if ((this.GetChildrenOperationCompleted == null)) {
                this.GetChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenOperationCompleted);
            }
            this.InvokeAsync("GetChildren", new object[] {
                        path,
                        username,
                        password}, this.GetChildrenOperationCompleted, userState);
        }
        
        private void OnGetChildrenOperationCompleted(object arg) {
            if ((this.GetChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenCompleted(this, new GetChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetCharacterStyles", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WordStyleStruct[] GetCharacterStyles(string username, string password) {
            object[] results = this.Invoke("GetCharacterStyles", new object[] {
                        username,
                        password});
            return ((WordStyleStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCharacterStylesAsync(string username, string password) {
            this.GetCharacterStylesAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetCharacterStylesAsync(string username, string password, object userState) {
            if ((this.GetCharacterStylesOperationCompleted == null)) {
                this.GetCharacterStylesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCharacterStylesOperationCompleted);
            }
            this.InvokeAsync("GetCharacterStyles", new object[] {
                        username,
                        password}, this.GetCharacterStylesOperationCompleted, userState);
        }
        
        private void OnGetCharacterStylesOperationCompleted(object arg) {
            if ((this.GetCharacterStylesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCharacterStylesCompleted(this, new GetCharacterStylesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetParagraphStyles", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WordStyleStruct[] GetParagraphStyles(string username, string password) {
            object[] results = this.Invoke("GetParagraphStyles", new object[] {
                        username,
                        password});
            return ((WordStyleStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetParagraphStylesAsync(string username, string password) {
            this.GetParagraphStylesAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetParagraphStylesAsync(string username, string password, object userState) {
            if ((this.GetParagraphStylesOperationCompleted == null)) {
                this.GetParagraphStylesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParagraphStylesOperationCompleted);
            }
            this.InvokeAsync("GetParagraphStyles", new object[] {
                        username,
                        password}, this.GetParagraphStylesOperationCompleted, userState);
        }
        
        private void OnGetParagraphStylesOperationCompleted(object arg) {
            if ((this.GetParagraphStylesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParagraphStylesCompleted(this, new GetParagraphStylesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetDocumentPassword", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDocumentPassword(string username, string password) {
            object[] results = this.Invoke("GetDocumentPassword", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentPasswordAsync(string username, string password) {
            this.GetDocumentPasswordAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetDocumentPasswordAsync(string username, string password, object userState) {
            if ((this.GetDocumentPasswordOperationCompleted == null)) {
                this.GetDocumentPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentPasswordOperationCompleted);
            }
            this.InvokeAsync("GetDocumentPassword", new object[] {
                        username,
                        password}, this.GetDocumentPasswordOperationCompleted, userState);
        }
        
        private void OnGetDocumentPasswordOperationCompleted(object arg) {
            if ((this.GetDocumentPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentPasswordCompleted(this, new GetDocumentPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetMaxLengthShortSummary", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMaxLengthShortSummary(string username, string password) {
            object[] results = this.Invoke("GetMaxLengthShortSummary", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxLengthShortSummaryAsync(string username, string password) {
            this.GetMaxLengthShortSummaryAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetMaxLengthShortSummaryAsync(string username, string password, object userState) {
            if ((this.GetMaxLengthShortSummaryOperationCompleted == null)) {
                this.GetMaxLengthShortSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxLengthShortSummaryOperationCompleted);
            }
            this.InvokeAsync("GetMaxLengthShortSummary", new object[] {
                        username,
                        password}, this.GetMaxLengthShortSummaryOperationCompleted, userState);
        }
        
        private void OnGetMaxLengthShortSummaryOperationCompleted(object arg) {
            if ((this.GetMaxLengthShortSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxLengthShortSummaryCompleted(this, new GetMaxLengthShortSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetMaxLengthLongSummary", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMaxLengthLongSummary(string username, string password) {
            object[] results = this.Invoke("GetMaxLengthLongSummary", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxLengthLongSummaryAsync(string username, string password) {
            this.GetMaxLengthLongSummaryAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetMaxLengthLongSummaryAsync(string username, string password, object userState) {
            if ((this.GetMaxLengthLongSummaryOperationCompleted == null)) {
                this.GetMaxLengthLongSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxLengthLongSummaryOperationCompleted);
            }
            this.InvokeAsync("GetMaxLengthLongSummary", new object[] {
                        username,
                        password}, this.GetMaxLengthLongSummaryOperationCompleted, userState);
        }
        
        private void OnGetMaxLengthLongSummaryOperationCompleted(object arg) {
            if ((this.GetMaxLengthLongSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxLengthLongSummaryCompleted(this, new GetMaxLengthLongSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetChildrenDirectories", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DirectoryStruct[] GetChildrenDirectories(string path, string username, string password) {
            object[] results = this.Invoke("GetChildrenDirectories", new object[] {
                        path,
                        username,
                        password});
            return ((DirectoryStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenDirectoriesAsync(string path, string username, string password) {
            this.GetChildrenDirectoriesAsync(path, username, password, null);
        }
        
        /// <remarks/>
        public void GetChildrenDirectoriesAsync(string path, string username, string password, object userState) {
            if ((this.GetChildrenDirectoriesOperationCompleted == null)) {
                this.GetChildrenDirectoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenDirectoriesOperationCompleted);
            }
            this.InvokeAsync("GetChildrenDirectories", new object[] {
                        path,
                        username,
                        password}, this.GetChildrenDirectoriesOperationCompleted, userState);
        }
        
        private void OnGetChildrenDirectoriesOperationCompleted(object arg) {
            if ((this.GetChildrenDirectoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenDirectoriesCompleted(this, new GetChildrenDirectoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetGeneralTags", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public GeneralTag[] GetGeneralTags(System.Guid publication, string username, string password) {
            object[] results = this.Invoke("GetGeneralTags", new object[] {
                        publication,
                        username,
                        password});
            return ((GeneralTag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralTagsAsync(System.Guid publication, string username, string password) {
            this.GetGeneralTagsAsync(publication, username, password, null);
        }
        
        /// <remarks/>
        public void GetGeneralTagsAsync(System.Guid publication, string username, string password, object userState) {
            if ((this.GetGeneralTagsOperationCompleted == null)) {
                this.GetGeneralTagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralTagsOperationCompleted);
            }
            this.InvokeAsync("GetGeneralTags", new object[] {
                        publication,
                        username,
                        password}, this.GetGeneralTagsOperationCompleted, userState);
        }
        
        private void OnGetGeneralTagsOperationCompleted(object arg) {
            if ((this.GetGeneralTagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralTagsCompleted(this, new GetGeneralTagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetHierarchy", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HDirectoryStruct GetHierarchy(string path, string username, string password) {
            object[] results = this.Invoke("GetHierarchy", new object[] {
                        path,
                        username,
                        password});
            return ((HDirectoryStruct)(results[0]));
        }
        
        /// <remarks/>
        public void GetHierarchyAsync(string path, string username, string password) {
            this.GetHierarchyAsync(path, username, password, null);
        }
        
        /// <remarks/>
        public void GetHierarchyAsync(string path, string username, string password, object userState) {
            if ((this.GetHierarchyOperationCompleted == null)) {
                this.GetHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHierarchyOperationCompleted);
            }
            this.InvokeAsync("GetHierarchy", new object[] {
                        path,
                        username,
                        password}, this.GetHierarchyOperationCompleted, userState);
        }
        
        private void OnGetHierarchyOperationCompleted(object arg) {
            if ((this.GetHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHierarchyCompleted(this, new GetHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetHierarchyByGuid", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HDirectoryStruct GetHierarchyByGuid(System.Guid guid, string username, string password) {
            object[] results = this.Invoke("GetHierarchyByGuid", new object[] {
                        guid,
                        username,
                        password});
            return ((HDirectoryStruct)(results[0]));
        }
        
        /// <remarks/>
        public void GetHierarchyByGuidAsync(System.Guid guid, string username, string password) {
            this.GetHierarchyByGuidAsync(guid, username, password, null);
        }
        
        /// <remarks/>
        public void GetHierarchyByGuidAsync(System.Guid guid, string username, string password, object userState) {
            if ((this.GetHierarchyByGuidOperationCompleted == null)) {
                this.GetHierarchyByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHierarchyByGuidOperationCompleted);
            }
            this.InvokeAsync("GetHierarchyByGuid", new object[] {
                        guid,
                        username,
                        password}, this.GetHierarchyByGuidOperationCompleted, userState);
        }
        
        private void OnGetHierarchyByGuidOperationCompleted(object arg) {
            if ((this.GetHierarchyByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHierarchyByGuidCompleted(this, new GetHierarchyByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetMediaLibraryItem", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaItemStruct GetMediaLibraryItem(string path, string username, string password) {
            object[] results = this.Invoke("GetMediaLibraryItem", new object[] {
                        path,
                        username,
                        password});
            return ((MediaItemStruct)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaLibraryItemAsync(string path, string username, string password) {
            this.GetMediaLibraryItemAsync(path, username, password, null);
        }
        
        /// <remarks/>
        public void GetMediaLibraryItemAsync(string path, string username, string password, object userState) {
            if ((this.GetMediaLibraryItemOperationCompleted == null)) {
                this.GetMediaLibraryItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaLibraryItemOperationCompleted);
            }
            this.InvokeAsync("GetMediaLibraryItem", new object[] {
                        path,
                        username,
                        password}, this.GetMediaLibraryItemOperationCompleted, userState);
        }
        
        private void OnGetMediaLibraryItemOperationCompleted(object arg) {
            if ((this.GetMediaLibraryItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaLibraryItemCompleted(this, new GetMediaLibraryItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetMediaStatistics", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MediaItemStruct GetMediaStatistics(string path, string username, string password) {
            object[] results = this.Invoke("GetMediaStatistics", new object[] {
                        path,
                        username,
                        password});
            return ((MediaItemStruct)(results[0]));
        }
        
        /// <remarks/>
        public void GetMediaStatisticsAsync(string path, string username, string password) {
            this.GetMediaStatisticsAsync(path, username, password, null);
        }
        
        /// <remarks/>
        public void GetMediaStatisticsAsync(string path, string username, string password, object userState) {
            if ((this.GetMediaStatisticsOperationCompleted == null)) {
                this.GetMediaStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetMediaStatistics", new object[] {
                        path,
                        username,
                        password}, this.GetMediaStatisticsOperationCompleted, userState);
        }
        
        private void OnGetMediaStatisticsOperationCompleted(object arg) {
            if ((this.GetMediaStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMediaStatisticsCompleted(this, new GetMediaStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetArticleCategories", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ItemStruct[] GetArticleCategories(System.Guid publicationGuid, string username, string password) {
            object[] results = this.Invoke("GetArticleCategories", new object[] {
                        publicationGuid,
                        username,
                        password});
            return ((ItemStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleCategoriesAsync(System.Guid publicationGuid, string username, string password) {
            this.GetArticleCategoriesAsync(publicationGuid, username, password, null);
        }
        
        /// <remarks/>
        public void GetArticleCategoriesAsync(System.Guid publicationGuid, string username, string password, object userState) {
            if ((this.GetArticleCategoriesOperationCompleted == null)) {
                this.GetArticleCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetArticleCategories", new object[] {
                        publicationGuid,
                        username,
                        password}, this.GetArticleCategoriesOperationCompleted, userState);
        }
        
        private void OnGetArticleCategoriesOperationCompleted(object arg) {
            if ((this.GetArticleCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleCategoriesCompleted(this, new GetArticleCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetWebCategories", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ItemStruct[] GetWebCategories(System.Guid publicationGuid, string username, string password) {
            object[] results = this.Invoke("GetWebCategories", new object[] {
                        publicationGuid,
                        username,
                        password});
            return ((ItemStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWebCategoriesAsync(System.Guid publicationGuid, string username, string password) {
            this.GetWebCategoriesAsync(publicationGuid, username, password, null);
        }
        
        /// <remarks/>
        public void GetWebCategoriesAsync(System.Guid publicationGuid, string username, string password, object userState) {
            if ((this.GetWebCategoriesOperationCompleted == null)) {
                this.GetWebCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetWebCategories", new object[] {
                        publicationGuid,
                        username,
                        password}, this.GetWebCategoriesOperationCompleted, userState);
        }
        
        private void OnGetWebCategoriesOperationCompleted(object arg) {
            if ((this.GetWebCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebCategoriesCompleted(this, new GetWebCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetCurrentIssues", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ItemStruct[] GetCurrentIssues(System.Guid publicationGuid, string username, string password) {
            object[] results = this.Invoke("GetCurrentIssues", new object[] {
                        publicationGuid,
                        username,
                        password});
            return ((ItemStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentIssuesAsync(System.Guid publicationGuid, string username, string password) {
            this.GetCurrentIssuesAsync(publicationGuid, username, password, null);
        }
        
        /// <remarks/>
        public void GetCurrentIssuesAsync(System.Guid publicationGuid, string username, string password, object userState) {
            if ((this.GetCurrentIssuesOperationCompleted == null)) {
                this.GetCurrentIssuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentIssuesOperationCompleted);
            }
            this.InvokeAsync("GetCurrentIssues", new object[] {
                        publicationGuid,
                        username,
                        password}, this.GetCurrentIssuesOperationCompleted, userState);
        }
        
        private void OnGetCurrentIssuesOperationCompleted(object arg) {
            if ((this.GetCurrentIssuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentIssuesCompleted(this, new GetCurrentIssuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetItemDisplayName", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemDisplayName(System.Guid guid, string username, string password) {
            object[] results = this.Invoke("GetItemDisplayName", new object[] {
                        guid,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemDisplayNameAsync(System.Guid guid, string username, string password) {
            this.GetItemDisplayNameAsync(guid, username, password, null);
        }
        
        /// <remarks/>
        public void GetItemDisplayNameAsync(System.Guid guid, string username, string password, object userState) {
            if ((this.GetItemDisplayNameOperationCompleted == null)) {
                this.GetItemDisplayNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemDisplayNameOperationCompleted);
            }
            this.InvokeAsync("GetItemDisplayName", new object[] {
                        guid,
                        username,
                        password}, this.GetItemDisplayNameOperationCompleted, userState);
        }
        
        private void OnGetItemDisplayNameOperationCompleted(object arg) {
            if ((this.GetItemDisplayNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemDisplayNameCompleted(this, new GetItemDisplayNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetIssues", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ItemStruct[] GetIssues(System.Guid publicationGuid, string username, string password) {
            object[] results = this.Invoke("GetIssues", new object[] {
                        publicationGuid,
                        username,
                        password});
            return ((ItemStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetIssuesAsync(System.Guid publicationGuid, string username, string password) {
            this.GetIssuesAsync(publicationGuid, username, password, null);
        }
        
        /// <remarks/>
        public void GetIssuesAsync(System.Guid publicationGuid, string username, string password, object userState) {
            if ((this.GetIssuesOperationCompleted == null)) {
                this.GetIssuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIssuesOperationCompleted);
            }
            this.InvokeAsync("GetIssues", new object[] {
                        publicationGuid,
                        username,
                        password}, this.GetIssuesOperationCompleted, userState);
        }
        
        private void OnGetIssuesOperationCompleted(object arg) {
            if ((this.GetIssuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIssuesCompleted(this, new GetIssuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetIssueDate", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetIssueDate(System.Guid issueGuid, string username, string password) {
            object[] results = this.Invoke("GetIssueDate", new object[] {
                        issueGuid,
                        username,
                        password});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetIssueDateAsync(System.Guid issueGuid, string username, string password) {
            this.GetIssueDateAsync(issueGuid, username, password, null);
        }
        
        /// <remarks/>
        public void GetIssueDateAsync(System.Guid issueGuid, string username, string password, object userState) {
            if ((this.GetIssueDateOperationCompleted == null)) {
                this.GetIssueDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIssueDateOperationCompleted);
            }
            this.InvokeAsync("GetIssueDate", new object[] {
                        issueGuid,
                        username,
                        password}, this.GetIssueDateOperationCompleted, userState);
        }
        
        private void OnGetIssueDateOperationCompleted(object arg) {
            if ((this.GetIssueDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIssueDateCompleted(this, new GetIssueDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetPublicationFrequency", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPublicationFrequency(System.Guid publicationGuid, string username, string password) {
            object[] results = this.Invoke("GetPublicationFrequency", new object[] {
                        publicationGuid,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicationFrequencyAsync(System.Guid publicationGuid, string username, string password) {
            this.GetPublicationFrequencyAsync(publicationGuid, username, password, null);
        }
        
        /// <remarks/>
        public void GetPublicationFrequencyAsync(System.Guid publicationGuid, string username, string password, object userState) {
            if ((this.GetPublicationFrequencyOperationCompleted == null)) {
                this.GetPublicationFrequencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicationFrequencyOperationCompleted);
            }
            this.InvokeAsync("GetPublicationFrequency", new object[] {
                        publicationGuid,
                        username,
                        password}, this.GetPublicationFrequencyOperationCompleted, userState);
        }
        
        private void OnGetPublicationFrequencyOperationCompleted(object arg) {
            if ((this.GetPublicationFrequencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicationFrequencyCompleted(this, new GetPublicationFrequencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/SearchIndustries", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TaxonomyStruct[] SearchIndustries(string searchTerm, string username, string password) {
            object[] results = this.Invoke("SearchIndustries", new object[] {
                        searchTerm,
                        username,
                        password});
            return ((TaxonomyStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchIndustriesAsync(string searchTerm, string username, string password) {
            this.SearchIndustriesAsync(searchTerm, username, password, null);
        }
        
        /// <remarks/>
        public void SearchIndustriesAsync(string searchTerm, string username, string password, object userState) {
            if ((this.SearchIndustriesOperationCompleted == null)) {
                this.SearchIndustriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchIndustriesOperationCompleted);
            }
            this.InvokeAsync("SearchIndustries", new object[] {
                        searchTerm,
                        username,
                        password}, this.SearchIndustriesOperationCompleted, userState);
        }
        
        private void OnSearchIndustriesOperationCompleted(object arg) {
            if ((this.SearchIndustriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchIndustriesCompleted(this, new SearchIndustriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetArticleDetails", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleStruct GetArticleDetails(string articleNumber, string username, string password) {
            object[] results = this.Invoke("GetArticleDetails", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((ArticleStruct)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleDetailsAsync(string articleNumber, string username, string password) {
            this.GetArticleDetailsAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void GetArticleDetailsAsync(string articleNumber, string username, string password, object userState) {
            if ((this.GetArticleDetailsOperationCompleted == null)) {
                this.GetArticleDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleDetailsOperationCompleted);
            }
            this.InvokeAsync("GetArticleDetails", new object[] {
                        articleNumber,
                        username,
                        password}, this.GetArticleDetailsOperationCompleted, userState);
        }
        
        private void OnGetArticleDetailsOperationCompleted(object arg) {
            if ((this.GetArticleDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleDetailsCompleted(this, new GetArticleDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetArticleDetailsBG", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleStruct GetArticleDetailsBG(System.Guid articleGuid, string username, string password) {
            object[] results = this.Invoke("GetArticleDetailsBG", new object[] {
                        articleGuid,
                        username,
                        password});
            return ((ArticleStruct)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleDetailsBGAsync(System.Guid articleGuid, string username, string password) {
            this.GetArticleDetailsBGAsync(articleGuid, username, password, null);
        }
        
        /// <remarks/>
        public void GetArticleDetailsBGAsync(System.Guid articleGuid, string username, string password, object userState) {
            if ((this.GetArticleDetailsBGOperationCompleted == null)) {
                this.GetArticleDetailsBGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleDetailsBGOperationCompleted);
            }
            this.InvokeAsync("GetArticleDetailsBG", new object[] {
                        articleGuid,
                        username,
                        password}, this.GetArticleDetailsBGOperationCompleted, userState);
        }
        
        private void OnGetArticleDetailsBGOperationCompleted(object arg) {
            if ((this.GetArticleDetailsBGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleDetailsBGCompleted(this, new GetArticleDetailsBGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetWordVersionNum", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetWordVersionNum(string articleNumber, string username, string password) {
            object[] results = this.Invoke("GetWordVersionNum", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetWordVersionNumAsync(string articleNumber, string username, string password) {
            this.GetWordVersionNumAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void GetWordVersionNumAsync(string articleNumber, string username, string password, object userState) {
            if ((this.GetWordVersionNumOperationCompleted == null)) {
                this.GetWordVersionNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWordVersionNumOperationCompleted);
            }
            this.InvokeAsync("GetWordVersionNum", new object[] {
                        articleNumber,
                        username,
                        password}, this.GetWordVersionNumOperationCompleted, userState);
        }
        
        private void OnGetWordVersionNumOperationCompleted(object arg) {
            if ((this.GetWordVersionNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWordVersionNumCompleted(this, new GetWordVersionNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetWordVersionNumByGuid", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetWordVersionNumByGuid(System.Guid articleGuid, string username, string password) {
            object[] results = this.Invoke("GetWordVersionNumByGuid", new object[] {
                        articleGuid,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetWordVersionNumByGuidAsync(System.Guid articleGuid, string username, string password) {
            this.GetWordVersionNumByGuidAsync(articleGuid, username, password, null);
        }
        
        /// <remarks/>
        public void GetWordVersionNumByGuidAsync(System.Guid articleGuid, string username, string password, object userState) {
            if ((this.GetWordVersionNumByGuidOperationCompleted == null)) {
                this.GetWordVersionNumByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWordVersionNumByGuidOperationCompleted);
            }
            this.InvokeAsync("GetWordVersionNumByGuid", new object[] {
                        articleGuid,
                        username,
                        password}, this.GetWordVersionNumByGuidOperationCompleted, userState);
        }
        
        private void OnGetWordVersionNumByGuidOperationCompleted(object arg) {
            if ((this.GetWordVersionNumByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWordVersionNumByGuidCompleted(this, new GetWordVersionNumByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/SearchTaxonomy", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TaxonomyStruct[] SearchTaxonomy(System.Guid taxonomy, string searchTerm, string username, string password) {
            object[] results = this.Invoke("SearchTaxonomy", new object[] {
                        taxonomy,
                        searchTerm,
                        username,
                        password});
            return ((TaxonomyStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchTaxonomyAsync(System.Guid taxonomy, string searchTerm, string username, string password) {
            this.SearchTaxonomyAsync(taxonomy, searchTerm, username, password, null);
        }
        
        /// <remarks/>
        public void SearchTaxonomyAsync(System.Guid taxonomy, string searchTerm, string username, string password, object userState) {
            if ((this.SearchTaxonomyOperationCompleted == null)) {
                this.SearchTaxonomyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchTaxonomyOperationCompleted);
            }
            this.InvokeAsync("SearchTaxonomy", new object[] {
                        taxonomy,
                        searchTerm,
                        username,
                        password}, this.SearchTaxonomyOperationCompleted, userState);
        }
        
        private void OnSearchTaxonomyOperationCompleted(object arg) {
            if ((this.SearchTaxonomyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchTaxonomyCompleted(this, new SearchTaxonomyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetPublications", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ItemStruct[] GetPublications(string username, string password) {
            object[] results = this.Invoke("GetPublications", new object[] {
                        username,
                        password});
            return ((ItemStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicationsAsync(string username, string password) {
            this.GetPublicationsAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetPublicationsAsync(string username, string password, object userState) {
            if ((this.GetPublicationsOperationCompleted == null)) {
                this.GetPublicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicationsOperationCompleted);
            }
            this.InvokeAsync("GetPublications", new object[] {
                        username,
                        password}, this.GetPublicationsOperationCompleted, userState);
        }
        
        private void OnGetPublicationsOperationCompleted(object arg) {
            if ((this.GetPublicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicationsCompleted(this, new GetPublicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/AuthenticateUser", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserStatusStruct AuthenticateUser(string username, string password) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        username,
                        password});
            return ((UserStatusStruct)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string username, string password) {
            this.AuthenticateUserAsync(username, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string username, string password, object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        username,
                        password}, this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetRemainingAttempts", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRemainingAttempts(string username) {
            object[] results = this.Invoke("GetRemainingAttempts", new object[] {
                        username});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRemainingAttemptsAsync(string username) {
            this.GetRemainingAttemptsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetRemainingAttemptsAsync(string username, object userState) {
            if ((this.GetRemainingAttemptsOperationCompleted == null)) {
                this.GetRemainingAttemptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRemainingAttemptsOperationCompleted);
            }
            this.InvokeAsync("GetRemainingAttempts", new object[] {
                        username}, this.GetRemainingAttemptsOperationCompleted, userState);
        }
        
        private void OnGetRemainingAttemptsOperationCompleted(object arg) {
            if ((this.GetRemainingAttemptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRemainingAttemptsCompleted(this, new GetRemainingAttemptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetArticleUrl", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetArticleUrl(string articleNumber, string username, string password) {
            object[] results = this.Invoke("GetArticleUrl", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleUrlAsync(string articleNumber, string username, string password) {
            this.GetArticleUrlAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void GetArticleUrlAsync(string articleNumber, string username, string password, object userState) {
            if ((this.GetArticleUrlOperationCompleted == null)) {
                this.GetArticleUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleUrlOperationCompleted);
            }
            this.InvokeAsync("GetArticleUrl", new object[] {
                        articleNumber,
                        username,
                        password}, this.GetArticleUrlOperationCompleted, userState);
        }
        
        private void OnGetArticleUrlOperationCompleted(object arg) {
            if ((this.GetArticleUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleUrlCompleted(this, new GetArticleUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetArticleDynamicUrl", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetArticleDynamicUrl(string articleNumber, string username, string password) {
            object[] results = this.Invoke("GetArticleDynamicUrl", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleDynamicUrlAsync(string articleNumber, string username, string password) {
            this.GetArticleDynamicUrlAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void GetArticleDynamicUrlAsync(string articleNumber, string username, string password, object userState) {
            if ((this.GetArticleDynamicUrlOperationCompleted == null)) {
                this.GetArticleDynamicUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleDynamicUrlOperationCompleted);
            }
            this.InvokeAsync("GetArticleDynamicUrl", new object[] {
                        articleNumber,
                        username,
                        password}, this.GetArticleDynamicUrlOperationCompleted, userState);
        }
        
        private void OnGetArticleDynamicUrlOperationCompleted(object arg) {
            if ((this.GetArticleDynamicUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleDynamicUrlCompleted(this, new GetArticleDynamicUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetDynamicUrl", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDynamicUrl(string sitecorePath, string username, string password) {
            object[] results = this.Invoke("GetDynamicUrl", new object[] {
                        sitecorePath,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDynamicUrlAsync(string sitecorePath, string username, string password) {
            this.GetDynamicUrlAsync(sitecorePath, username, password, null);
        }
        
        /// <remarks/>
        public void GetDynamicUrlAsync(string sitecorePath, string username, string password, object userState) {
            if ((this.GetDynamicUrlOperationCompleted == null)) {
                this.GetDynamicUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDynamicUrlOperationCompleted);
            }
            this.InvokeAsync("GetDynamicUrl", new object[] {
                        sitecorePath,
                        username,
                        password}, this.GetDynamicUrlOperationCompleted, userState);
        }
        
        private void OnGetDynamicUrlOperationCompleted(object arg) {
            if ((this.GetDynamicUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDynamicUrlCompleted(this, new GetDynamicUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetArticleGuidByNum", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetArticleGuidByNum(string articleNumber, string username, string password) {
            object[] results = this.Invoke("GetArticleGuidByNum", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleGuidByNumAsync(string articleNumber, string username, string password) {
            this.GetArticleGuidByNumAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void GetArticleGuidByNumAsync(string articleNumber, string username, string password, object userState) {
            if ((this.GetArticleGuidByNumOperationCompleted == null)) {
                this.GetArticleGuidByNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleGuidByNumOperationCompleted);
            }
            this.InvokeAsync("GetArticleGuidByNum", new object[] {
                        articleNumber,
                        username,
                        password}, this.GetArticleGuidByNumOperationCompleted, userState);
        }
        
        private void OnGetArticleGuidByNumOperationCompleted(object arg) {
            if ((this.GetArticleGuidByNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleGuidByNumCompleted(this, new GetArticleGuidByNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/LucArtGuidByNum", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LucArtGuidByNum(string articleNumber, string username, string password) {
            object[] results = this.Invoke("LucArtGuidByNum", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LucArtGuidByNumAsync(string articleNumber, string username, string password) {
            this.LucArtGuidByNumAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void LucArtGuidByNumAsync(string articleNumber, string username, string password, object userState) {
            if ((this.LucArtGuidByNumOperationCompleted == null)) {
                this.LucArtGuidByNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLucArtGuidByNumOperationCompleted);
            }
            this.InvokeAsync("LucArtGuidByNum", new object[] {
                        articleNumber,
                        username,
                        password}, this.LucArtGuidByNumOperationCompleted, userState);
        }
        
        private void OnLucArtGuidByNumOperationCompleted(object arg) {
            if ((this.LucArtGuidByNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LucArtGuidByNumCompleted(this, new LucArtGuidByNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetAuthors", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public StaffStruct[] GetAuthors(string username, string password) {
            object[] results = this.Invoke("GetAuthors", new object[] {
                        username,
                        password});
            return ((StaffStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAuthorsAsync(string username, string password) {
            this.GetAuthorsAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetAuthorsAsync(string username, string password, object userState) {
            if ((this.GetAuthorsOperationCompleted == null)) {
                this.GetAuthorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuthorsOperationCompleted);
            }
            this.InvokeAsync("GetAuthors", new object[] {
                        username,
                        password}, this.GetAuthorsOperationCompleted, userState);
        }
        
        private void OnGetAuthorsOperationCompleted(object arg) {
            if ((this.GetAuthorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuthorsCompleted(this, new GetAuthorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetStaffAndGroups", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public StaffStruct[] GetStaffAndGroups(string username, string password) {
            object[] results = this.Invoke("GetStaffAndGroups", new object[] {
                        username,
                        password});
            return ((StaffStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffAndGroupsAsync(string username, string password) {
            this.GetStaffAndGroupsAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetStaffAndGroupsAsync(string username, string password, object userState) {
            if ((this.GetStaffAndGroupsOperationCompleted == null)) {
                this.GetStaffAndGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffAndGroupsOperationCompleted);
            }
            this.InvokeAsync("GetStaffAndGroups", new object[] {
                        username,
                        password}, this.GetStaffAndGroupsOperationCompleted, userState);
        }
        
        private void OnGetStaffAndGroupsOperationCompleted(object arg) {
            if ((this.GetStaffAndGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffAndGroupsCompleted(this, new GetStaffAndGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/DoesArticleHaveText", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoesArticleHaveText(string articleNumber, string username, string password) {
            object[] results = this.Invoke("DoesArticleHaveText", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DoesArticleHaveTextAsync(string articleNumber, string username, string password) {
            this.DoesArticleHaveTextAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void DoesArticleHaveTextAsync(string articleNumber, string username, string password, object userState) {
            if ((this.DoesArticleHaveTextOperationCompleted == null)) {
                this.DoesArticleHaveTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoesArticleHaveTextOperationCompleted);
            }
            this.InvokeAsync("DoesArticleHaveText", new object[] {
                        articleNumber,
                        username,
                        password}, this.DoesArticleHaveTextOperationCompleted, userState);
        }
        
        private void OnDoesArticleHaveTextOperationCompleted(object arg) {
            if ((this.DoesArticleHaveTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoesArticleHaveTextCompleted(this, new DoesArticleHaveTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/DoesArticleGuidHaveText", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoesArticleGuidHaveText(System.Guid articleGuid, string username, string password) {
            object[] results = this.Invoke("DoesArticleGuidHaveText", new object[] {
                        articleGuid,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DoesArticleGuidHaveTextAsync(System.Guid articleGuid, string username, string password) {
            this.DoesArticleGuidHaveTextAsync(articleGuid, username, password, null);
        }
        
        /// <remarks/>
        public void DoesArticleGuidHaveTextAsync(System.Guid articleGuid, string username, string password, object userState) {
            if ((this.DoesArticleGuidHaveTextOperationCompleted == null)) {
                this.DoesArticleGuidHaveTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoesArticleGuidHaveTextOperationCompleted);
            }
            this.InvokeAsync("DoesArticleGuidHaveText", new object[] {
                        articleGuid,
                        username,
                        password}, this.DoesArticleGuidHaveTextOperationCompleted, userState);
        }
        
        private void OnDoesArticleGuidHaveTextOperationCompleted(object arg) {
            if ((this.DoesArticleGuidHaveTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoesArticleGuidHaveTextCompleted(this, new DoesArticleGuidHaveTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/DoesArticleExist", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoesArticleExist(string articleNumber, string username, string password) {
            object[] results = this.Invoke("DoesArticleExist", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DoesArticleExistAsync(string articleNumber, string username, string password) {
            this.DoesArticleExistAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void DoesArticleExistAsync(string articleNumber, string username, string password, object userState) {
            if ((this.DoesArticleExistOperationCompleted == null)) {
                this.DoesArticleExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoesArticleExistOperationCompleted);
            }
            this.InvokeAsync("DoesArticleExist", new object[] {
                        articleNumber,
                        username,
                        password}, this.DoesArticleExistOperationCompleted, userState);
        }
        
        private void OnDoesArticleExistOperationCompleted(object arg) {
            if ((this.DoesArticleExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoesArticleExistCompleted(this, new DoesArticleExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetSDRootPath", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetSDRootPath(string username, string password) {
            object[] results = this.Invoke("GetSDRootPath", new object[] {
                        username,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSDRootPathAsync(string username, string password) {
            this.GetSDRootPathAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetSDRootPathAsync(string username, string password, object userState) {
            if ((this.GetSDRootPathOperationCompleted == null)) {
                this.GetSDRootPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSDRootPathOperationCompleted);
            }
            this.InvokeAsync("GetSDRootPath", new object[] {
                        username,
                        password}, this.GetSDRootPathOperationCompleted, userState);
        }
        
        private void OnGetSDRootPathOperationCompleted(object arg) {
            if ((this.GetSDRootPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSDRootPathCompleted(this, new GetSDRootPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetGraphicRootPath", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetGraphicRootPath(string username, string password) {
            object[] results = this.Invoke("GetGraphicRootPath", new object[] {
                        username,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGraphicRootPathAsync(string username, string password) {
            this.GetGraphicRootPathAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetGraphicRootPathAsync(string username, string password, object userState) {
            if ((this.GetGraphicRootPathOperationCompleted == null)) {
                this.GetGraphicRootPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGraphicRootPathOperationCompleted);
            }
            this.InvokeAsync("GetGraphicRootPath", new object[] {
                        username,
                        password}, this.GetGraphicRootPathOperationCompleted, userState);
        }
        
        private void OnGetGraphicRootPathOperationCompleted(object arg) {
            if ((this.GetGraphicRootPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGraphicRootPathCompleted(this, new GetGraphicRootPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/DoesArticleGuidExist", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoesArticleGuidExist(System.Guid articleGuid, string username, string password) {
            object[] results = this.Invoke("DoesArticleGuidExist", new object[] {
                        articleGuid,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DoesArticleGuidExistAsync(System.Guid articleGuid, string username, string password) {
            this.DoesArticleGuidExistAsync(articleGuid, username, password, null);
        }
        
        /// <remarks/>
        public void DoesArticleGuidExistAsync(System.Guid articleGuid, string username, string password, object userState) {
            if ((this.DoesArticleGuidExistOperationCompleted == null)) {
                this.DoesArticleGuidExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoesArticleGuidExistOperationCompleted);
            }
            this.InvokeAsync("DoesArticleGuidExist", new object[] {
                        articleGuid,
                        username,
                        password}, this.DoesArticleGuidExistOperationCompleted, userState);
        }
        
        private void OnDoesArticleGuidExistOperationCompleted(object arg) {
            if ((this.DoesArticleGuidExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoesArticleGuidExistCompleted(this, new DoesArticleGuidExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/PreviewUrlArticle", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PreviewUrlArticle(string articleNumber, string username, string password) {
            object[] results = this.Invoke("PreviewUrlArticle", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PreviewUrlArticleAsync(string articleNumber, string username, string password) {
            this.PreviewUrlArticleAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void PreviewUrlArticleAsync(string articleNumber, string username, string password, object userState) {
            if ((this.PreviewUrlArticleOperationCompleted == null)) {
                this.PreviewUrlArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPreviewUrlArticleOperationCompleted);
            }
            this.InvokeAsync("PreviewUrlArticle", new object[] {
                        articleNumber,
                        username,
                        password}, this.PreviewUrlArticleOperationCompleted, userState);
        }
        
        private void OnPreviewUrlArticleOperationCompleted(object arg) {
            if ((this.PreviewUrlArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PreviewUrlArticleCompleted(this, new PreviewUrlArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/MediaPreviewUrl", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MediaPreviewUrl(string path, string username, string password) {
            object[] results = this.Invoke("MediaPreviewUrl", new object[] {
                        path,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MediaPreviewUrlAsync(string path, string username, string password) {
            this.MediaPreviewUrlAsync(path, username, password, null);
        }
        
        /// <remarks/>
        public void MediaPreviewUrlAsync(string path, string username, string password, object userState) {
            if ((this.MediaPreviewUrlOperationCompleted == null)) {
                this.MediaPreviewUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMediaPreviewUrlOperationCompleted);
            }
            this.InvokeAsync("MediaPreviewUrl", new object[] {
                        path,
                        username,
                        password}, this.MediaPreviewUrlOperationCompleted, userState);
        }
        
        private void OnMediaPreviewUrlOperationCompleted(object arg) {
            if ((this.MediaPreviewUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MediaPreviewUrlCompleted(this, new MediaPreviewUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetArtPreInfo", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticlePreviewInfo GetArtPreInfo(string articleNumber, string username, string password) {
            object[] results = this.Invoke("GetArtPreInfo", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((ArticlePreviewInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetArtPreInfoAsync(string articleNumber, string username, string password) {
            this.GetArtPreInfoAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void GetArtPreInfoAsync(string articleNumber, string username, string password, object userState) {
            if ((this.GetArtPreInfoOperationCompleted == null)) {
                this.GetArtPreInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtPreInfoOperationCompleted);
            }
            this.InvokeAsync("GetArtPreInfo", new object[] {
                        articleNumber,
                        username,
                        password}, this.GetArtPreInfoOperationCompleted, userState);
        }
        
        private void OnGetArtPreInfoOperationCompleted(object arg) {
            if ((this.GetArtPreInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtPreInfoCompleted(this, new GetArtPreInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetArtPreInfos", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArticlePreviewInfo[] GetArtPreInfos(System.Guid[] guids, string username, string password) {
            object[] results = this.Invoke("GetArtPreInfos", new object[] {
                        guids,
                        username,
                        password});
            return ((ArticlePreviewInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArtPreInfosAsync(System.Guid[] guids, string username, string password) {
            this.GetArtPreInfosAsync(guids, username, password, null);
        }
        
        /// <remarks/>
        public void GetArtPreInfosAsync(System.Guid[] guids, string username, string password, object userState) {
            if ((this.GetArtPreInfosOperationCompleted == null)) {
                this.GetArtPreInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtPreInfosOperationCompleted);
            }
            this.InvokeAsync("GetArtPreInfos", new object[] {
                        guids,
                        username,
                        password}, this.GetArtPreInfosOperationCompleted, userState);
        }
        
        private void OnGetArtPreInfosOperationCompleted(object arg) {
            if ((this.GetArtPreInfosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtPreInfosCompleted(this, new GetArtPreInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetWorkflowState", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkflowState GetWorkflowState(string articleNumber, string username, string password) {
            object[] results = this.Invoke("GetWorkflowState", new object[] {
                        articleNumber,
                        username,
                        password});
            return ((WorkflowState)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkflowStateAsync(string articleNumber, string username, string password) {
            this.GetWorkflowStateAsync(articleNumber, username, password, null);
        }
        
        /// <remarks/>
        public void GetWorkflowStateAsync(string articleNumber, string username, string password, object userState) {
            if ((this.GetWorkflowStateOperationCompleted == null)) {
                this.GetWorkflowStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkflowStateOperationCompleted);
            }
            this.InvokeAsync("GetWorkflowState", new object[] {
                        articleNumber,
                        username,
                        password}, this.GetWorkflowStateOperationCompleted, userState);
        }
        
        private void OnGetWorkflowStateOperationCompleted(object arg) {
            if ((this.GetWorkflowStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkflowStateCompleted(this, new GetWorkflowStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/SetWorkflowState", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkflowState SetWorkflowState(string articleNumber, string commandID, string username, string password) {
            object[] results = this.Invoke("SetWorkflowState", new object[] {
                        articleNumber,
                        commandID,
                        username,
                        password});
            return ((WorkflowState)(results[0]));
        }
        
        /// <remarks/>
        public void SetWorkflowStateAsync(string articleNumber, string commandID, string username, string password) {
            this.SetWorkflowStateAsync(articleNumber, commandID, username, password, null);
        }
        
        /// <remarks/>
        public void SetWorkflowStateAsync(string articleNumber, string commandID, string username, string password, object userState) {
            if ((this.SetWorkflowStateOperationCompleted == null)) {
                this.SetWorkflowStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetWorkflowStateOperationCompleted);
            }
            this.InvokeAsync("SetWorkflowState", new object[] {
                        articleNumber,
                        commandID,
                        username,
                        password}, this.SetWorkflowStateOperationCompleted, userState);
        }
        
        private void OnSetWorkflowStateOperationCompleted(object arg) {
            if ((this.SetWorkflowStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetWorkflowStateCompleted(this, new SetWorkflowStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetWidthHeightMI", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetWidthHeightMI(string path, string username, string password) {
            object[] results = this.Invoke("GetWidthHeightMI", new object[] {
                        path,
                        username,
                        password});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWidthHeightMIAsync(string path, string username, string password) {
            this.GetWidthHeightMIAsync(path, username, password, null);
        }
        
        /// <remarks/>
        public void GetWidthHeightMIAsync(string path, string username, string password, object userState) {
            if ((this.GetWidthHeightMIOperationCompleted == null)) {
                this.GetWidthHeightMIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWidthHeightMIOperationCompleted);
            }
            this.InvokeAsync("GetWidthHeightMI", new object[] {
                        path,
                        username,
                        password}, this.GetWidthHeightMIOperationCompleted, userState);
        }
        
        private void OnGetWidthHeightMIOperationCompleted(object arg) {
            if ((this.GetWidthHeightMICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWidthHeightMICompleted(this, new GetWidthHeightMICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetWorkflowStateByGuid", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkflowState GetWorkflowStateByGuid(System.Guid articleGuid, string username, string password) {
            object[] results = this.Invoke("GetWorkflowStateByGuid", new object[] {
                        articleGuid,
                        username,
                        password});
            return ((WorkflowState)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkflowStateByGuidAsync(System.Guid articleGuid, string username, string password) {
            this.GetWorkflowStateByGuidAsync(articleGuid, username, password, null);
        }
        
        /// <remarks/>
        public void GetWorkflowStateByGuidAsync(System.Guid articleGuid, string username, string password, object userState) {
            if ((this.GetWorkflowStateByGuidOperationCompleted == null)) {
                this.GetWorkflowStateByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkflowStateByGuidOperationCompleted);
            }
            this.InvokeAsync("GetWorkflowStateByGuid", new object[] {
                        articleGuid,
                        username,
                        password}, this.GetWorkflowStateByGuidOperationCompleted, userState);
        }
        
        private void OnGetWorkflowStateByGuidOperationCompleted(object arg) {
            if ((this.GetWorkflowStateByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkflowStateByGuidCompleted(this, new GetWorkflowStateByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/SetWorkflowStateByGuid", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkflowState SetWorkflowStateByGuid(System.Guid articleGuid, string commandID, string username, string password) {
            object[] results = this.Invoke("SetWorkflowStateByGuid", new object[] {
                        articleGuid,
                        commandID,
                        username,
                        password});
            return ((WorkflowState)(results[0]));
        }
        
        /// <remarks/>
        public void SetWorkflowStateByGuidAsync(System.Guid articleGuid, string commandID, string username, string password) {
            this.SetWorkflowStateByGuidAsync(articleGuid, commandID, username, password, null);
        }
        
        /// <remarks/>
        public void SetWorkflowStateByGuidAsync(System.Guid articleGuid, string commandID, string username, string password, object userState) {
            if ((this.SetWorkflowStateByGuidOperationCompleted == null)) {
                this.SetWorkflowStateByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetWorkflowStateByGuidOperationCompleted);
            }
            this.InvokeAsync("SetWorkflowStateByGuid", new object[] {
                        articleGuid,
                        commandID,
                        username,
                        password}, this.SetWorkflowStateByGuidOperationCompleted, userState);
        }
        
        private void OnSetWorkflowStateByGuidOperationCompleted(object arg) {
            if ((this.SetWorkflowStateByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetWorkflowStateByGuidCompleted(this, new SetWorkflowStateByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetArticleSizesForPublication", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArticleSize[] GetArticleSizesForPublication(System.Guid publicationID, string username, string password) {
            object[] results = this.Invoke("GetArticleSizesForPublication", new object[] {
                        publicationID,
                        username,
                        password});
            return ((ArticleSize[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleSizesForPublicationAsync(System.Guid publicationID, string username, string password) {
            this.GetArticleSizesForPublicationAsync(publicationID, username, password, null);
        }
        
        /// <remarks/>
        public void GetArticleSizesForPublicationAsync(System.Guid publicationID, string username, string password, object userState) {
            if ((this.GetArticleSizesForPublicationOperationCompleted == null)) {
                this.GetArticleSizesForPublicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleSizesForPublicationOperationCompleted);
            }
            this.InvokeAsync("GetArticleSizesForPublication", new object[] {
                        publicationID,
                        username,
                        password}, this.GetArticleSizesForPublicationOperationCompleted, userState);
        }
        
        private void OnGetArticleSizesForPublicationOperationCompleted(object arg) {
            if ((this.GetArticleSizesForPublicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleSizesForPublicationCompleted(this, new GetArticleSizesForPublicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/DoesArticleNameAlreadyExistInIssue", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoesArticleNameAlreadyExistInIssue(ArticleStruct articleStruct, string username, string password) {
            object[] results = this.Invoke("DoesArticleNameAlreadyExistInIssue", new object[] {
                        articleStruct,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DoesArticleNameAlreadyExistInIssueAsync(ArticleStruct articleStruct, string username, string password) {
            this.DoesArticleNameAlreadyExistInIssueAsync(articleStruct, username, password, null);
        }
        
        /// <remarks/>
        public void DoesArticleNameAlreadyExistInIssueAsync(ArticleStruct articleStruct, string username, string password, object userState) {
            if ((this.DoesArticleNameAlreadyExistInIssueOperationCompleted == null)) {
                this.DoesArticleNameAlreadyExistInIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoesArticleNameAlreadyExistInIssueOperationCompleted);
            }
            this.InvokeAsync("DoesArticleNameAlreadyExistInIssue", new object[] {
                        articleStruct,
                        username,
                        password}, this.DoesArticleNameAlreadyExistInIssueOperationCompleted, userState);
        }
        
        private void OnDoesArticleNameAlreadyExistInIssueOperationCompleted(object arg) {
            if ((this.DoesArticleNameAlreadyExistInIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoesArticleNameAlreadyExistInIssueCompleted(this, new DoesArticleNameAlreadyExistInIssueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/HasPrimaryIndustry", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasPrimaryIndustry(System.Guid[] industries, string username, string password) {
            object[] results = this.Invoke("HasPrimaryIndustry", new object[] {
                        industries,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasPrimaryIndustryAsync(System.Guid[] industries, string username, string password) {
            this.HasPrimaryIndustryAsync(industries, username, password, null);
        }
        
        /// <remarks/>
        public void HasPrimaryIndustryAsync(System.Guid[] industries, string username, string password, object userState) {
            if ((this.HasPrimaryIndustryOperationCompleted == null)) {
                this.HasPrimaryIndustryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPrimaryIndustryOperationCompleted);
            }
            this.InvokeAsync("HasPrimaryIndustry", new object[] {
                        industries,
                        username,
                        password}, this.HasPrimaryIndustryOperationCompleted, userState);
        }
        
        private void OnHasPrimaryIndustryOperationCompleted(object arg) {
            if ((this.HasPrimaryIndustryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPrimaryIndustryCompleted(this, new HasPrimaryIndustryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/IsAvailable", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAvailable() {
            object[] results = this.Invoke("IsAvailable", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAvailableAsync() {
            this.IsAvailableAsync(null);
        }
        
        /// <remarks/>
        public void IsAvailableAsync(object userState) {
            if ((this.IsAvailableOperationCompleted == null)) {
                this.IsAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAvailableOperationCompleted);
            }
            this.InvokeAsync("IsAvailable", new object[0], this.IsAvailableOperationCompleted, userState);
        }
        
        private void OnIsAvailableOperationCompleted(object arg) {
            if ((this.IsAvailableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAvailableCompleted(this, new IsAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetDealInfo", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DealInfo GetDealInfo(string recordNumber, string username, string password) {
            object[] results = this.Invoke("GetDealInfo", new object[] {
                        recordNumber,
                        username,
                        password});
            return ((DealInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealInfoAsync(string recordNumber, string username, string password) {
            this.GetDealInfoAsync(recordNumber, username, password, null);
        }
        
        /// <remarks/>
        public void GetDealInfoAsync(string recordNumber, string username, string password, object userState) {
            if ((this.GetDealInfoOperationCompleted == null)) {
                this.GetDealInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealInfoOperationCompleted);
            }
            this.InvokeAsync("GetDealInfo", new object[] {
                        recordNumber,
                        username,
                        password}, this.GetDealInfoOperationCompleted, userState);
        }
        
        private void OnGetDealInfoOperationCompleted(object arg) {
            if ((this.GetDealInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealInfoCompleted(this, new GetDealInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetAllCompanies", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompanyWrapper[] GetAllCompanies(string username, string password) {
            object[] results = this.Invoke("GetAllCompanies", new object[] {
                        username,
                        password});
            return ((CompanyWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCompaniesAsync(string username, string password) {
            this.GetAllCompaniesAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetAllCompaniesAsync(string username, string password, object userState) {
            if ((this.GetAllCompaniesOperationCompleted == null)) {
                this.GetAllCompaniesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCompaniesOperationCompleted);
            }
            this.InvokeAsync("GetAllCompanies", new object[] {
                        username,
                        password}, this.GetAllCompaniesOperationCompleted, userState);
        }
        
        private void OnGetAllCompaniesOperationCompleted(object arg) {
            if ((this.GetAllCompaniesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCompaniesCompleted(this, new GetAllCompaniesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetAllCompaniesWithRelated", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompanyWrapper[] GetAllCompaniesWithRelated(string username, string password) {
            object[] results = this.Invoke("GetAllCompaniesWithRelated", new object[] {
                        username,
                        password});
            return ((CompanyWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCompaniesWithRelatedAsync(string username, string password) {
            this.GetAllCompaniesWithRelatedAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetAllCompaniesWithRelatedAsync(string username, string password, object userState) {
            if ((this.GetAllCompaniesWithRelatedOperationCompleted == null)) {
                this.GetAllCompaniesWithRelatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCompaniesWithRelatedOperationCompleted);
            }
            this.InvokeAsync("GetAllCompaniesWithRelated", new object[] {
                        username,
                        password}, this.GetAllCompaniesWithRelatedOperationCompleted, userState);
        }
        
        private void OnGetAllCompaniesWithRelatedOperationCompleted(object arg) {
            if ((this.GetAllCompaniesWithRelatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCompaniesWithRelatedCompleted(this, new GetAllCompaniesWithRelatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/IsContinuousPublishingPublication", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsContinuousPublishingPublication(System.Guid publicationID, string username, string password) {
            object[] results = this.Invoke("IsContinuousPublishingPublication", new object[] {
                        publicationID,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsContinuousPublishingPublicationAsync(System.Guid publicationID, string username, string password) {
            this.IsContinuousPublishingPublicationAsync(publicationID, username, password, null);
        }
        
        /// <remarks/>
        public void IsContinuousPublishingPublicationAsync(System.Guid publicationID, string username, string password, object userState) {
            if ((this.IsContinuousPublishingPublicationOperationCompleted == null)) {
                this.IsContinuousPublishingPublicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsContinuousPublishingPublicationOperationCompleted);
            }
            this.InvokeAsync("IsContinuousPublishingPublication", new object[] {
                        publicationID,
                        username,
                        password}, this.IsContinuousPublishingPublicationOperationCompleted, userState);
        }
        
        private void OnIsContinuousPublishingPublicationOperationCompleted(object arg) {
            if ((this.IsContinuousPublishingPublicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsContinuousPublishingPublicationCompleted(this, new IsContinuousPublishingPublicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://tempuri.org/GetSupportEmail", RequestNamespace="https://tempuri.org/", ResponseNamespace="https://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSupportEmail() {
            object[] results = this.Invoke("GetSupportEmail", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupportEmailAsync() {
            this.GetSupportEmailAsync(null);
        }
        
        /// <remarks/>
        public void GetSupportEmailAsync(object userState) {
            if ((this.GetSupportEmailOperationCompleted == null)) {
                this.GetSupportEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupportEmailOperationCompleted);
            }
            this.InvokeAsync("GetSupportEmail", new object[0], this.GetSupportEmailOperationCompleted, userState);
        }
        
        private void OnGetSupportEmailOperationCompleted(object arg) {
            if ((this.GetSupportEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupportEmailCompleted(this, new GetSupportEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class WordStyleStruct {
        
        private string wordStyleField;
        
        private string cssElementField;
        
        private string cssClassField;
        
        /// <remarks/>
        public string WordStyle {
            get {
                return this.wordStyleField;
            }
            set {
                this.wordStyleField = value;
            }
        }
        
        /// <remarks/>
        public string CssElement {
            get {
                return this.cssElementField;
            }
            set {
                this.cssElementField = value;
            }
        }
        
        /// <remarks/>
        public string CssClass {
            get {
                return this.cssClassField;
            }
            set {
                this.cssClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class CompanyWrapper {
        
        private int recordIDField;
        
        private string recordNumberField;
        
        private string titleField;
        
        private CompanyWrapper[] relatedCompaniesField;
        
        private System.Nullable<int> parentField;
        
        /// <remarks/>
        public int RecordID {
            get {
                return this.recordIDField;
            }
            set {
                this.recordIDField = value;
            }
        }
        
        /// <remarks/>
        public string RecordNumber {
            get {
                return this.recordNumberField;
            }
            set {
                this.recordNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public CompanyWrapper[] RelatedCompanies {
            get {
                return this.relatedCompaniesField;
            }
            set {
                this.relatedCompaniesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Parent {
            get {
                return this.parentField;
            }
            set {
                this.parentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class DealInfo {
        
        private string nameField;
        
        private string idField;
        
        private System.DateTime dealDateField;
        
        private System.DateTime lastUpdatedField;
        
        private string[] companiesField;
        
        private string urlField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DealDate {
            get {
                return this.dealDateField;
            }
            set {
                this.dealDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string[] Companies {
            get {
                return this.companiesField;
            }
            set {
                this.companiesField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class ArticleSize {
        
        private string nameField;
        
        private int minimumWordCountField;
        
        private int maximumWordCountField;
        
        private System.Guid idField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int MinimumWordCount {
            get {
                return this.minimumWordCountField;
            }
            set {
                this.minimumWordCountField = value;
            }
        }
        
        /// <remarks/>
        public int MaximumWordCount {
            get {
                return this.maximumWordCountField;
            }
            set {
                this.maximumWordCountField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class UserStatusStruct {
        
        private string userNameField;
        
        private int loginAttemptsRemainingField;
        
        private bool lockedOutField;
        
        private bool loginSuccessfulField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public int LoginAttemptsRemaining {
            get {
                return this.loginAttemptsRemainingField;
            }
            set {
                this.loginAttemptsRemainingField = value;
            }
        }
        
        /// <remarks/>
        public bool LockedOut {
            get {
                return this.lockedOutField;
            }
            set {
                this.lockedOutField = value;
            }
        }
        
        /// <remarks/>
        public bool LoginSuccessful {
            get {
                return this.loginSuccessfulField;
            }
            set {
                this.loginSuccessfulField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class ArticlePreviewInfo {
        
        private string titleField;
        
        private string[] authorsField;
        
        private string articleNumberField;
        
        private string publicationField;
        
        private System.DateTime dateField;
        
        private string previewUrlField;
        
        private System.Guid guidField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string[] Authors {
            get {
                return this.authorsField;
            }
            set {
                this.authorsField = value;
            }
        }
        
        /// <remarks/>
        public string ArticleNumber {
            get {
                return this.articleNumberField;
            }
            set {
                this.articleNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Publication {
            get {
                return this.publicationField;
            }
            set {
                this.publicationField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string PreviewUrl {
            get {
                return this.previewUrlField;
            }
            set {
                this.previewUrlField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class StaffStruct {
        
        private string nameField;
        
        private System.Guid[] publicationsField;
        
        private System.Guid idField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] Publications {
            get {
                return this.publicationsField;
            }
            set {
                this.publicationsField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class WorkflowCommand {
        
        private string displayNameField;
        
        private string stringIDField;
        
        private StaffStruct[] globalNotifyListField;
        
        private bool sendsToFinalField;
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string StringID {
            get {
                return this.stringIDField;
            }
            set {
                this.stringIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public StaffStruct[] GlobalNotifyList {
            get {
                return this.globalNotifyListField;
            }
            set {
                this.globalNotifyListField = value;
            }
        }
        
        /// <remarks/>
        public bool SendsToFinal {
            get {
                return this.sendsToFinalField;
            }
            set {
                this.sendsToFinalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class WorkflowState {
        
        private string displayNameField;
        
        private WorkflowCommand[] commandsField;
        
        private bool isFinalField;
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WorkflowCommand[] Commands {
            get {
                return this.commandsField;
            }
            set {
                this.commandsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFinal {
            get {
                return this.isFinalField;
            }
            set {
                this.isFinalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class ArticleStruct {
        
        private System.Guid articleGuidField;
        
        private string titleField;
        
        private System.Guid volumeField;
        
        private System.Guid issueField;
        
        private System.DateTime printPublicationDateField;
        
        private System.DateTime webPublicationDateField;
        
        private string articleNumberField;
        
        private System.Guid articleCategoryField;
        
        private System.Guid webCategoryField;
        
        private string notesToEditorialField;
        
        private string notesToProductionField;
        
        private string subtitleField;
        
        private string longSummaryField;
        
        private string shortSummaryField;
        
        private string deckField;
        
        private int wordCountField;
        
        private bool isFeaturedArticleField;
        
        private bool hasBeenNominatedField;
        
        private bool isTopStoryField;
        
        private WorkflowState workflowStateField;
        
        private System.Guid commandIDField;
        
        private TaxonomyStruct[] subjectsField;
        
        private TaxonomyStruct[] geographyField;                
        
        private TaxonomyStruct[] marketSegmentsField;
        private TaxonomyStruct[] taxonomyField;       
        
        private System.Guid[] relatedInlineArticlesField;
        
        private System.Guid[] relatedArticlesField;
        
        private System.Guid[] childArticlesField;
        
        private string[] supportingDocumentPathsField;
                       
        private ArticlePreviewInfo[] referencedArticlesInfoField;
        
        private ArticlePreviewInfo[] relatedArticlesInfoField;
        
        private string[] referencedDealsField;
        
        private StaffStruct[] authorsField;
        
        private StaffStruct[] editorsField;
        
        private StaffStruct[] articleSpecificNotificationsField;
        
        private StaffStruct[] globalNotificationsField;
        
        private int wordDocVersionNumberField;
        
        private string wordDocLastUpdateDateField;
        
        private string wordDocLastUpdatedByField;
        
        private System.Guid publicationField;
        
        private bool embargoedField;
        
        private bool isPublishedField;
        
        /// <remarks/>
        public System.Guid ArticleGuid {
            get {
                return this.articleGuidField;
            }
            set {
                this.articleGuidField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Issue {
            get {
                return this.issueField;
            }
            set {
                this.issueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PrintPublicationDate {
            get {
                return this.printPublicationDateField;
            }
            set {
                this.printPublicationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime WebPublicationDate {
            get {
                return this.webPublicationDateField;
            }
            set {
                this.webPublicationDateField = value;
            }
        }
        
        /// <remarks/>
        public string ArticleNumber {
            get {
                return this.articleNumberField;
            }
            set {
                this.articleNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ArticleCategory {
            get {
                return this.articleCategoryField;
            }
            set {
                this.articleCategoryField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid WebCategory {
            get {
                return this.webCategoryField;
            }
            set {
                this.webCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string NotesToEditorial {
            get {
                return this.notesToEditorialField;
            }
            set {
                this.notesToEditorialField = value;
            }
        }
        
        /// <remarks/>
        public string NotesToProduction {
            get {
                return this.notesToProductionField;
            }
            set {
                this.notesToProductionField = value;
            }
        }
        
        /// <remarks/>
        public string Subtitle {
            get {
                return this.subtitleField;
            }
            set {
                this.subtitleField = value;
            }
        }
        
        /// <remarks/>
        public string LongSummary {
            get {
                return this.longSummaryField;
            }
            set {
                this.longSummaryField = value;
            }
        }
        
        /// <remarks/>
        public string ShortSummary {
            get {
                return this.shortSummaryField;
            }
            set {
                this.shortSummaryField = value;
            }
        }
        
        /// <remarks/>
        public string Deck {
            get {
                return this.deckField;
            }
            set {
                this.deckField = value;
            }
        }
        
        /// <remarks/>
        public int WordCount {
            get {
                return this.wordCountField;
            }
            set {
                this.wordCountField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFeaturedArticle {
            get {
                return this.isFeaturedArticleField;
            }
            set {
                this.isFeaturedArticleField = value;
            }
        }
        
        /// <remarks/>
        public bool HasBeenNominated {
            get {
                return this.hasBeenNominatedField;
            }
            set {
                this.hasBeenNominatedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTopStory {
            get {
                return this.isTopStoryField;
            }
            set {
                this.isTopStoryField = value;
            }
        }
        
        /// <remarks/>
        public WorkflowState WorkflowState {
            get {
                return this.workflowStateField;
            }
            set {
                this.workflowStateField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CommandID {
            get {
                return this.commandIDField;
            }
            set {
                this.commandIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TaxonomyStruct[] Taxonomy
		{
            get {
                return this.taxonomyField;
            }
            set {
                this.taxonomyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TaxonomyStruct[] Subjects {
            get {
                return this.subjectsField;
            }
            set {
                this.subjectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TaxonomyStruct[] Geography {
            get {
                return this.geographyField;
            }
            set {
                this.geographyField = value;
            }
        }
              
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TaxonomyStruct[] MarketSegments {
            get {
                return this.marketSegmentsField;
            }
            set {
                this.marketSegmentsField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] RelatedInlineArticles {
            get {
                return this.relatedInlineArticlesField;
            }
            set {
                this.relatedInlineArticlesField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] RelatedArticles {
            get {
                return this.relatedArticlesField;
            }
            set {
                this.relatedArticlesField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] ChildArticles {
            get {
                return this.childArticlesField;
            }
            set {
                this.childArticlesField = value;
            }
        }
        
        /// <remarks/>
        public string[] SupportingDocumentPaths {
            get {
                return this.supportingDocumentPathsField;
            }
            set {
                this.supportingDocumentPathsField = value;
            }
        }
               
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArticlePreviewInfo[] ReferencedArticlesInfo {
            get {
                return this.referencedArticlesInfoField;
            }
            set {
                this.referencedArticlesInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ArticlePreviewInfo[] RelatedArticlesInfo {
            get {
                return this.relatedArticlesInfoField;
            }
            set {
                this.relatedArticlesInfoField = value;
            }
        }
        
        /// <remarks/>
        public string[] ReferencedDeals {
            get {
                return this.referencedDealsField;
            }
            set {
                this.referencedDealsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public StaffStruct[] Authors {
            get {
                return this.authorsField;
            }
            set {
                this.authorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public StaffStruct[] Editors {
            get {
                return this.editorsField;
            }
            set {
                this.editorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public StaffStruct[] ArticleSpecificNotifications {
            get {
                return this.articleSpecificNotificationsField;
            }
            set {
                this.articleSpecificNotificationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public StaffStruct[] GlobalNotifications {
            get {
                return this.globalNotificationsField;
            }
            set {
                this.globalNotificationsField = value;
            }
        }
        
        /// <remarks/>
        public int WordDocVersionNumber {
            get {
                return this.wordDocVersionNumberField;
            }
            set {
                this.wordDocVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string WordDocLastUpdateDate {
            get {
                return this.wordDocLastUpdateDateField;
            }
            set {
                this.wordDocLastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        public string WordDocLastUpdatedBy {
            get {
                return this.wordDocLastUpdatedByField;
            }
            set {
                this.wordDocLastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Publication {
            get {
                return this.publicationField;
            }
            set {
                this.publicationField = value;
            }
        }
        
        /// <remarks/>
        public bool Embargoed {
            get {
                return this.embargoedField;
            }
            set {
                this.embargoedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPublished {
            get {
                return this.isPublishedField;
            }
            set {
                this.isPublishedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class TaxonomyStruct {
        
        private string nameField;
        
        private System.Guid idField;

        private string sectionField;

        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string Section
        {
            get
            {
                return this.sectionField;
            }
            set
            {
                this.sectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class ItemStruct {
        
        private string nameField;
        
        private System.Guid idField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class MediaItemStruct {
        
        private string extensionField;
        
        private byte[] dataField;
        
        private string nameField;
        
        private string urlField;
        
        private System.DateTime uploadDateField;
        
        private string uploaderField;
        
        private string pathField;
        
        private string widthField;
        
        private string heightField;
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UploadDate {
            get {
                return this.uploadDateField;
            }
            set {
                this.uploadDateField = value;
            }
        }
        
        /// <remarks/>
        public string Uploader {
            get {
                return this.uploaderField;
            }
            set {
                this.uploaderField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public string Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class HDirectoryStruct {
        
        private string nameField;
        
        private HDirectoryStruct[] childrenField;
        
        private System.Guid idField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public HDirectoryStruct[] Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class GeneralTag {
        
        private string titleField;
        
        private System.Guid guidField;
        
        private int counterField;
        
        private string pathField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public int Counter {
            get {
                return this.counterField;
            }
            set {
                this.counterField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://tempuri.org/")]
    public partial class DirectoryStruct {
        
        private string nameField;
        
        private string[] childrenField;

		private List<string> childrenListField;

		/// <remarks/>
		public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string[] Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }

		public List<string> childrenList
		{
			get
			{
				return this.childrenListField;
			}
			set
			{
				this.childrenListField = value;
			}
		}
	}
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetChildrenCompletedEventHandler(object sender, GetChildrenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCharacterStylesCompletedEventHandler(object sender, GetCharacterStylesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCharacterStylesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCharacterStylesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WordStyleStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WordStyleStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetParagraphStylesCompletedEventHandler(object sender, GetParagraphStylesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParagraphStylesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParagraphStylesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WordStyleStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WordStyleStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDocumentPasswordCompletedEventHandler(object sender, GetDocumentPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetMaxLengthShortSummaryCompletedEventHandler(object sender, GetMaxLengthShortSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxLengthShortSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxLengthShortSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetMaxLengthLongSummaryCompletedEventHandler(object sender, GetMaxLengthLongSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxLengthLongSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxLengthLongSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetChildrenDirectoriesCompletedEventHandler(object sender, GetChildrenDirectoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenDirectoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenDirectoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DirectoryStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DirectoryStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetGeneralTagsCompletedEventHandler(object sender, GetGeneralTagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralTagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralTagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GeneralTag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GeneralTag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetHierarchyCompletedEventHandler(object sender, GetHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HDirectoryStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HDirectoryStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetHierarchyByGuidCompletedEventHandler(object sender, GetHierarchyByGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHierarchyByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHierarchyByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HDirectoryStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HDirectoryStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetMediaLibraryItemCompletedEventHandler(object sender, GetMediaLibraryItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaLibraryItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaLibraryItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaItemStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaItemStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetMediaStatisticsCompletedEventHandler(object sender, GetMediaStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMediaStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMediaStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MediaItemStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MediaItemStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArticleCategoriesCompletedEventHandler(object sender, GetArticleCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ItemStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetWebCategoriesCompletedEventHandler(object sender, GetWebCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ItemStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCurrentIssuesCompletedEventHandler(object sender, GetCurrentIssuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ItemStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetItemDisplayNameCompletedEventHandler(object sender, GetItemDisplayNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemDisplayNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemDisplayNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetIssuesCompletedEventHandler(object sender, GetIssuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ItemStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetIssueDateCompletedEventHandler(object sender, GetIssueDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIssueDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIssueDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPublicationFrequencyCompletedEventHandler(object sender, GetPublicationFrequencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicationFrequencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicationFrequencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SearchIndustriesCompletedEventHandler(object sender, SearchIndustriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchIndustriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchIndustriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaxonomyStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaxonomyStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArticleDetailsCompletedEventHandler(object sender, GetArticleDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArticleDetailsBGCompletedEventHandler(object sender, GetArticleDetailsBGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleDetailsBGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleDetailsBGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetWordVersionNumCompletedEventHandler(object sender, GetWordVersionNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWordVersionNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWordVersionNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetWordVersionNumByGuidCompletedEventHandler(object sender, GetWordVersionNumByGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWordVersionNumByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWordVersionNumByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SearchTaxonomyCompletedEventHandler(object sender, SearchTaxonomyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchTaxonomyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchTaxonomyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaxonomyStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaxonomyStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPublicationsCompletedEventHandler(object sender, GetPublicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ItemStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserStatusStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserStatusStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetRemainingAttemptsCompletedEventHandler(object sender, GetRemainingAttemptsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRemainingAttemptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRemainingAttemptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArticleUrlCompletedEventHandler(object sender, GetArticleUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArticleDynamicUrlCompletedEventHandler(object sender, GetArticleDynamicUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleDynamicUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleDynamicUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDynamicUrlCompletedEventHandler(object sender, GetDynamicUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDynamicUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDynamicUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArticleGuidByNumCompletedEventHandler(object sender, GetArticleGuidByNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleGuidByNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleGuidByNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void LucArtGuidByNumCompletedEventHandler(object sender, LucArtGuidByNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LucArtGuidByNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LucArtGuidByNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAuthorsCompletedEventHandler(object sender, GetAuthorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuthorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuthorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StaffStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StaffStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetStaffAndGroupsCompletedEventHandler(object sender, GetStaffAndGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffAndGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffAndGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StaffStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StaffStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DoesArticleHaveTextCompletedEventHandler(object sender, DoesArticleHaveTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoesArticleHaveTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoesArticleHaveTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DoesArticleGuidHaveTextCompletedEventHandler(object sender, DoesArticleGuidHaveTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoesArticleGuidHaveTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoesArticleGuidHaveTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DoesArticleExistCompletedEventHandler(object sender, DoesArticleExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoesArticleExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoesArticleExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSDRootPathCompletedEventHandler(object sender, GetSDRootPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSDRootPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSDRootPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetGraphicRootPathCompletedEventHandler(object sender, GetGraphicRootPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGraphicRootPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGraphicRootPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DoesArticleGuidExistCompletedEventHandler(object sender, DoesArticleGuidExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoesArticleGuidExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoesArticleGuidExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void PreviewUrlArticleCompletedEventHandler(object sender, PreviewUrlArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreviewUrlArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PreviewUrlArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void MediaPreviewUrlCompletedEventHandler(object sender, MediaPreviewUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaPreviewUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MediaPreviewUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArtPreInfoCompletedEventHandler(object sender, GetArtPreInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtPreInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtPreInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticlePreviewInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticlePreviewInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArtPreInfosCompletedEventHandler(object sender, GetArtPreInfosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtPreInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtPreInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticlePreviewInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticlePreviewInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetWorkflowStateCompletedEventHandler(object sender, GetWorkflowStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkflowStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkflowStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkflowState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkflowState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetWorkflowStateCompletedEventHandler(object sender, SetWorkflowStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetWorkflowStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetWorkflowStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkflowState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkflowState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetWidthHeightMICompletedEventHandler(object sender, GetWidthHeightMICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWidthHeightMICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWidthHeightMICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetWorkflowStateByGuidCompletedEventHandler(object sender, GetWorkflowStateByGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkflowStateByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkflowStateByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkflowState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkflowState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetWorkflowStateByGuidCompletedEventHandler(object sender, SetWorkflowStateByGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetWorkflowStateByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetWorkflowStateByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkflowState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkflowState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetArticleSizesForPublicationCompletedEventHandler(object sender, GetArticleSizesForPublicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleSizesForPublicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleSizesForPublicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleSize[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleSize[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DoesArticleNameAlreadyExistInIssueCompletedEventHandler(object sender, DoesArticleNameAlreadyExistInIssueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoesArticleNameAlreadyExistInIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoesArticleNameAlreadyExistInIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void HasPrimaryIndustryCompletedEventHandler(object sender, HasPrimaryIndustryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasPrimaryIndustryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasPrimaryIndustryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void IsAvailableCompletedEventHandler(object sender, IsAvailableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDealInfoCompletedEventHandler(object sender, GetDealInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DealInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DealInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAllCompaniesCompletedEventHandler(object sender, GetAllCompaniesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCompaniesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCompaniesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompanyWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAllCompaniesWithRelatedCompletedEventHandler(object sender, GetAllCompaniesWithRelatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCompaniesWithRelatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCompaniesWithRelatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompanyWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void IsContinuousPublishingPublicationCompletedEventHandler(object sender, IsContinuousPublishingPublicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsContinuousPublishingPublicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsContinuousPublishingPublicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSupportEmailCompletedEventHandler(object sender, GetSupportEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupportEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupportEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591